{"version":3,"file":"static/js/3050.0c01e7c3.chunk.js","mappings":"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","sources":["pages/Nurse/EmergencyPatientList/EmergencyPatientLIst.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./EmergencyPatientLIst.css\";\n\nimport { lazy, Suspense, useEffect } from \"react\";\nimport browserLinks from \"../../../browserlinks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nimport { useGetAllPatientsQuery } from \"../../../Store/Services/PatientService\";\nimport { getAllPatients } from \"../../../Store/Slices/PatientSlice\";\nimport { useGetAllDoctorsQuery } from \"../../../Store/Services/DoctorService\";\n\nimport { getAllDoctors } from \"../../../Store/Slices/DoctorSlice\";\n\nimport { useGetAllEmergencyPatientQuery } from \"../../../Store/Services/EmergencyPatientService\";\nimport { getAllEmergencyPatient } from \"../../../Store/Slices/EmergencyPatientSlice\";\nimport { useGetAllBedsQuery } from \"../../../Store/Services/BedService\";\nimport { getAllBeds } from \"../../../Store/Slices/BedSlice\";\n\nconst SideNav = lazy(() => import(\"../../../components/Nurse/SideNav\"));\nconst UpperNav = lazy(() =>\n  import(\"../../../components/Nurse/UpperNav/UpperNav\")\n);\n\nconst NurseEmergencyTable = lazy(() =>\n  import(\n    \"../../../components/Nurse/EmergencyPatientTable/EmergencyPatientTable\"\n  )\n);\n// const NurseEmergencyEditForm = lazy(() =>\n//   import(\n//     \"../../../components/Nurse/EditEmergencyPatientTableAndForm/EditEmergencyForm/EditEmergencyForm\"\n//   )\n// );\n\nexport default function EmergencyPatientLIst() {\n  const dispatch = useDispatch();\n  const responseGetAllPatients = useGetAllPatientsQuery();\n  const responseGetAllDoctors = useGetAllDoctorsQuery();\n  const responseGetAllEmergencyPatient = useGetAllEmergencyPatientQuery();\n  const responseGetAllBeds = useGetAllBedsQuery();\n\n  const { beds, createBeds, updateBeds, deleteBeds } = useSelector(\n    (state) => state.BedState\n  );\n\n  const { patients, patientCreate, patientUpdate, patientDelete } = useSelector(\n    (state) => state.PatientState\n  );\n  const {\n    emergencyPatients,\n    createEmergencyPatient,\n    updateEmergencyPatient,\n    deleteEmergencyPatient,\n  } = useSelector((state) => state.EmergencyPatientState);\n\n  // console.log(emergencyPatients);\n\n  const {\n    doctors,\n    doctorProfessionalDetails,\n    createDoctor,\n    updateDoctor,\n    deleteDoctor,\n  } = useSelector((state) => state.DoctorState);\n\n  const apiRefetch = async () => {\n    // Patients\n    const responseGetAllPatientsRefetch =\n      await responseGetAllPatients.refetch();\n    if (responseGetAllPatientsRefetch.isSuccess) {\n      const reverseArrayGetAllPatients =\n        responseGetAllPatientsRefetch?.data?.map(\n          responseGetAllPatientsRefetch?.data?.pop,\n          [...responseGetAllPatientsRefetch?.data]\n        );\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\n    }\n    //------------------\n    // Doctors\n    const responseGetAllDoctorsRefetch = await responseGetAllDoctors.refetch();\n    if (responseGetAllDoctorsRefetch.isSuccess) {\n      const reverseArrayGetAllDoctors = responseGetAllDoctorsRefetch?.data?.map(\n        responseGetAllDoctorsRefetch?.data?.pop,\n        [...responseGetAllDoctorsRefetch?.data]\n      );\n      const filteredArrayGetAllDoctors = reverseArrayGetAllDoctors?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllDoctors(filteredArrayGetAllDoctors));\n    }\n    // ------------------\n    // Emergency Patient\n    const responseGetAllEmergencyRefetch =\n      await responseGetAllEmergencyPatient.refetch();\n    if (responseGetAllEmergencyPatient.isSuccess) {\n      const reverseArrayGetAllEmergencyPatient =\n        responseGetAllEmergencyRefetch?.data?.map(\n          responseGetAllEmergencyRefetch?.data?.pop,\n          [...responseGetAllEmergencyRefetch?.data]\n        );\n      const filteredArrayGetAllEmergencyPatient =\n        reverseArrayGetAllEmergencyPatient?.filter(\n          (data) => data.isDeleted === false && data\n        );\n      dispatch(getAllEmergencyPatient(filteredArrayGetAllEmergencyPatient));\n    }\n    // ------------------\n    // Beds\n    const responseGetAllBedsRefetch = await responseGetAllBeds.refetch();\n    if (responseGetAllBedsRefetch.isSuccess) {\n      const reverseArrayGetAllBeds = responseGetAllBedsRefetch?.data?.map(\n        responseGetAllBedsRefetch?.data?.pop,\n        [...responseGetAllBedsRefetch?.data]\n      );\n      const filteredArrayGetAllBeds = reverseArrayGetAllBeds?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllBeds(filteredArrayGetAllBeds));\n    }\n    // ------------------\n  };\n  useEffect(() => {\n    apiRefetch();\n    // Patients\n    if (responseGetAllPatients.isSuccess) {\n      const reverseArrayGetAllPatients = responseGetAllPatients?.data?.map(\n        responseGetAllPatients?.data?.pop,\n        [...responseGetAllPatients?.data]\n      );\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\n        (data) => data.isDeleted === false && data\n      );\n\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\n    }\n    // --------------\n    // Doctors\n    if (responseGetAllDoctors.isSuccess) {\n      const reverseArrayGetAllDoctors = responseGetAllDoctors?.data?.map(\n        responseGetAllDoctors?.data?.pop,\n        [...responseGetAllDoctors?.data]\n      );\n      const filteredArrayGetAllDoctors = reverseArrayGetAllDoctors?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllDoctors(filteredArrayGetAllDoctors));\n    }\n    // -----------------\n    // EmergencyPatient\n    if (responseGetAllEmergencyPatient.isSuccess) {\n      const reverseArrayGetAllEmergencyPatient =\n        responseGetAllEmergencyPatient?.data?.map(\n          responseGetAllEmergencyPatient?.data?.pop,\n          [...responseGetAllEmergencyPatient?.data]\n        );\n      const filteredArrayGetAllEmergencyPatient =\n        reverseArrayGetAllEmergencyPatient?.filter(\n          (data) => data.isDeleted === false && data\n        );\n      dispatch(getAllEmergencyPatient(filteredArrayGetAllEmergencyPatient));\n    }\n    // ---------------\n    // Beds\n    if (responseGetAllBeds.isSuccess) {\n      const reverseArrayGetAllBeds = responseGetAllBeds?.data?.map(\n        responseGetAllBeds?.data?.pop,\n        [...responseGetAllBeds?.data]\n      );\n      const filteredArrayGetAllBeds = reverseArrayGetAllBeds?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllBeds(filteredArrayGetAllBeds));\n    }\n    // ---------------------\n  }, [\n    patientCreate,\n    patientUpdate,\n    patientDelete,\n    responseGetAllPatients.isSuccess,\n    createDoctor,\n    updateDoctor,\n    deleteDoctor,\n    responseGetAllDoctors.isSuccess,\n    createEmergencyPatient,\n    updateEmergencyPatient,\n    deleteEmergencyPatient,\n    responseGetAllEmergencyPatient.isSuccess,\n    responseGetAllBeds.isSuccess,\n    createBeds,\n    updateBeds,\n    deleteBeds,\n  ]);\n  return (\n    <>\n      {responseGetAllPatients.isLoading &&\n      responseGetAllDoctors.isLoading &&\n      responseGetAllEmergencyPatient.isLoading &&\n      responseGetAllBeds.isLoading ? (\n        <Box sx={{ width: \"100%\" }}>\n          <LinearProgress />\n        </Box>\n      ) : (\n        <div className=\"superadmin-main flex flex-row w-full h-screen\">\n          <div className=\"superadmin-main-left w-[20%] shadow-lg\">\n            <SideNav\n              activePage={`${browserLinks.nurse.category}/${browserLinks.nurse.internalPages.emergencyPatientList}`}\n            />\n          </div>\n          <div className=\"superadmin-main-right flex flex-col w-[80%]\">\n            <UpperNav />\n            <div className=\"superadmin-main-right_dashboard w-full overflow-y-scroll\">\n              <NurseEmergencyTable />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["SideNav","lazy","UpperNav","NurseEmergencyTable","EmergencyPatientLIst","dispatch","useDispatch","responseGetAllPatients","useGetAllPatientsQuery","responseGetAllDoctors","useGetAllDoctorsQuery","responseGetAllEmergencyPatient","useGetAllEmergencyPatientQuery","responseGetAllBeds","useGetAllBedsQuery","beds","createBeds","updateBeds","deleteBeds","useSelector","state","BedState","patients","patientCreate","patientUpdate","patientDelete","PatientState","emergencyPatients","createEmergencyPatient","updateEmergencyPatient","deleteEmergencyPatient","EmergencyPatientState","doctors","doctorProfessionalDetails","createDoctor","updateDoctor","deleteDoctor","DoctorState","useEffect","async","responseGetAllPatientsRefetch","refetch","isSuccess","_responseGetAllPatien","_responseGetAllPatien2","reverseArrayGetAllPatients","data","map","pop","filteredArrayGetAllPatients","filter","isDeleted","getAllPatients","responseGetAllDoctorsRefetch","_responseGetAllDoctor","_responseGetAllDoctor2","reverseArrayGetAllDoctors","filteredArrayGetAllDoctors","getAllDoctors","responseGetAllEmergencyRefetch","_responseGetAllEmerge","_responseGetAllEmerge2","reverseArrayGetAllEmergencyPatient","filteredArrayGetAllEmergencyPatient","getAllEmergencyPatient","responseGetAllBedsRefetch","_responseGetAllBedsRe","_responseGetAllBedsRe2","reverseArrayGetAllBeds","filteredArrayGetAllBeds","getAllBeds","apiRefetch","_responseGetAllPatien3","_responseGetAllPatien4","_responseGetAllDoctor3","_responseGetAllDoctor4","_responseGetAllEmerge3","_responseGetAllEmerge4","_responseGetAllBeds$d","_responseGetAllBeds$d2","_jsx","_Fragment","children","isLoading","Box","sx","width","LinearProgress","_jsxs","className","activePage","concat","browserLinks","nurse","category","internalPages","emergencyPatientList"],"sourceRoot":""}