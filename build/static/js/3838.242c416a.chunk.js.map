{"version":3,"file":"static/js/3838.242c416a.chunk.js","mappings":"wPAYA,MAAMA,GAAUC,EAAAA,EAAAA,OAAK,IAAM,+BACrBC,GAAWD,EAAAA,EAAAA,OAAK,IAAM,0DAEtBE,GAAiBF,EAAAA,EAAAA,OAAK,IAC1B,0DAGa,SAASG,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAyBC,EAAAA,EAAAA,OAEzB,SAAEC,EAAQ,cAAEC,EAAa,cAAEC,EAAa,cAAEC,IAAkBC,EAAAA,EAAAA,KAC/DC,GAAUA,EAAMC,eAwCnB,OApBAC,EAAAA,EAAAA,YAAU,KAGR,GApBiBC,WAEjB,MAAMC,QACEX,EAAuBY,UAC/B,GAAID,EAA8BE,UAAW,CAAC,IAADC,EAAAC,EAC3C,MAAMC,EACyB,OAA7BL,QAA6B,IAA7BA,GAAmC,QAANG,EAA7BH,EAA+BM,YAAI,IAAAH,OAAN,EAA7BA,EAAqCI,IACN,OAA7BP,QAA6B,IAA7BA,GAAmC,QAANI,EAA7BJ,EAA+BM,YAAI,IAAAF,OAAN,EAA7BA,EAAqCI,IACrC,IAAiC,OAA7BR,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BM,OAEjCG,EAAwD,OAA1BJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BK,QAC7DJ,IAA4B,IAAnBA,EAAKK,WAAuBL,IAExCnB,GAASyB,EAAAA,EAAAA,IAAeH,GAC1B,GAIAI,GAEIxB,EAAuBa,UAAW,CAAC,IAADY,EAAAC,EACpC,MAAMV,EAAmD,OAAtBhB,QAAsB,IAAtBA,GAA4B,QAANyB,EAAtBzB,EAAwBiB,YAAI,IAAAQ,OAAN,EAAtBA,EAA8BP,IACzC,OAAtBlB,QAAsB,IAAtBA,GAA4B,QAAN0B,EAAtB1B,EAAwBiB,YAAI,IAAAS,OAAN,EAAtBA,EAA8BP,IAC9B,IAA0B,OAAtBnB,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBiB,OAExBG,EAAwD,OAA1BJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BK,QAC7DJ,IAA4B,IAAnBA,EAAKK,WAAuBL,IAGxCnB,GAASyB,EAAAA,EAAAA,IAAeH,GAC1B,IACC,CACDjB,EACAC,EACAC,EACAL,EAAuBa,aAGvBc,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG7B,EAAuB8B,WACtBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,QAASJ,UACzBF,EAAAA,EAAAA,KAACO,EAAAA,EAAc,OAGjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CP,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKS,UAAU,yCAAwCP,UACrDF,EAAAA,EAAAA,KAAClC,EAAO,CACN4C,WAAU,GAAAC,OAAKC,EAAAA,EAAaC,MAAMC,SAAQ,KAAAH,OAAIC,EAAAA,EAAaC,MAAME,cAAcC,gBAGnFR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CP,SAAA,EAC1DF,EAAAA,EAAAA,KAAChC,EAAQ,KACTgC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,2DAA0DP,UACvEF,EAAAA,EAAAA,KAAC/B,EAAc,aAO7B,C","sources":["pages/Nurse/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport \"./Dashboard.css\";\n\nimport { lazy, Suspense, useEffect } from \"react\";\nimport browserLinks from \"../../browserlinks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nimport { useGetAllPatientsQuery } from \"../../Store/Services/PatientService\";\nimport { getAllPatients } from \"../../Store/Slices/PatientSlice\";\n\nconst SideNav = lazy(() => import(\"../../components/Nurse/SideNav\"));\nconst UpperNav = lazy(() => import(\"../../components/Nurse/UpperNav/UpperNav\"));\n\nconst DashboardTable = lazy(() =>\n  import(\"../../components/Nurse/DashboardTable/DashboardTable\")\n);\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const responseGetAllPatients = useGetAllPatientsQuery();\n\n  const { patients, patientCreate, patientUpdate, patientDelete } = useSelector(\n    (state) => state.PatientState\n  );\n\n  const apiRefetch = async () => {\n    // Patients\n    const responseGetAllPatientsRefetch =\n      await responseGetAllPatients.refetch();\n    if (responseGetAllPatientsRefetch.isSuccess) {\n      const reverseArrayGetAllPatients =\n        responseGetAllPatientsRefetch?.data?.map(\n          responseGetAllPatientsRefetch?.data?.pop,\n          [...responseGetAllPatientsRefetch?.data]\n        );\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\n        (data) => data.isDeleted === false && data\n      );\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\n    }\n    //------------------\n  };\n  useEffect(() => {\n    apiRefetch();\n    // Patients\n    if (responseGetAllPatients.isSuccess) {\n      const reverseArrayGetAllPatients = responseGetAllPatients?.data?.map(\n        responseGetAllPatients?.data?.pop,\n        [...responseGetAllPatients?.data]\n      );\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\n        (data) => data.isDeleted === false && data\n      );\n\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\n    }\n  }, [\n    patientCreate,\n    patientUpdate,\n    patientDelete,\n    responseGetAllPatients.isSuccess,\n  ]);\n  return (\n    <>\n      {responseGetAllPatients.isLoading ? (\n        <Box sx={{ width: \"100%\" }}>\n          <LinearProgress />\n        </Box>\n      ) : (\n        <div className='superadmin-main flex flex-row w-full h-screen'>\n          <div className='superadmin-main-left w-[20%] shadow-lg'>\n            <SideNav\n              activePage={`${browserLinks.nurse.category}/${browserLinks.nurse.internalPages.dashboard}`}\n            />\n          </div>\n          <div className='superadmin-main-right flex flex-col w-[80%]'>\n            <UpperNav />\n            <div className='superadmin-main-right_dashboard w-full overflow-y-scroll'>\n              <DashboardTable />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["SideNav","lazy","UpperNav","DashboardTable","Dashboard","dispatch","useDispatch","responseGetAllPatients","useGetAllPatientsQuery","patients","patientCreate","patientUpdate","patientDelete","useSelector","state","PatientState","useEffect","async","responseGetAllPatientsRefetch","refetch","isSuccess","_responseGetAllPatien","_responseGetAllPatien2","reverseArrayGetAllPatients","data","map","pop","filteredArrayGetAllPatients","filter","isDeleted","getAllPatients","apiRefetch","_responseGetAllPatien3","_responseGetAllPatien4","_jsx","_Fragment","children","isLoading","Box","sx","width","LinearProgress","_jsxs","className","activePage","concat","browserLinks","nurse","category","internalPages","dashboard"],"sourceRoot":""}