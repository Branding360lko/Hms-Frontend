{"version":3,"file":"static/js/7793.577c9ee1.chunk.js","mappings":"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","sources":["components/Nurse/DashboardTable/DashboardTable.js","components/Table.js"],"sourcesContent":["import React from \"react\";\nimport { Suspense } from \"react\";\nimport \"./DashboardTable.css\";\nimport Table from \"../../Table\";\nimport { useSelector } from \"react-redux\";\nimport parse from \"html-react-parser\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function DashboardTable() {\n  const { patients } = useSelector((state) => state.PatientState);\n  const date = (dateTime) => {\n    const newdate = new Date(dateTime);\n\n    return newdate.toLocaleDateString();\n  };\n\n  const time = (dateTime) => {\n    const newDate = new Date(dateTime);\n\n    return newDate.toLocaleTimeString();\n  };\n  const mappedPatientData = patients?.map((patient, index) => {\n    return {\n      tableId: index + 1,\n      data: patient,\n    };\n  });\n\n  const config = [\n    {\n      label: \"UHID\",\n      render: (list) => list.data.patientId,\n    },\n    {\n      label: \"Patient Name\",\n      render: (list) => list.data.patientName,\n    },\n    {\n      label: \"Patient Email\",\n      render: (list) => list.data.patientEmail,\n    },\n\n    {\n      label: \"Patient Phone\",\n      render: (list) => list.data.patientPhone,\n    },\n    {\n      label: \"Date Created\",\n      render: (list) =>\n        `${date(list.data.createdAt)} - ${time(list.data.createdAt)}`,\n    },\n    {\n      label: \"Blood Group\",\n      render: (list) => list.data.patientBloodGroup,\n    },\n    // {\n    //   label: \"Doctor Visit\",\n    //   render: (list) => <Checkbox disabled checked />,\n    // },\n    // {\n    //   label: \"Action\",\n    //   render: (list) => (\n    //     <div className='flex gap-[10px] justify-center'>\n    //       <div\n    //         onClick={() => handleOpenViewModal(list)}\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\n    //         <MdViewKanban className='text-[25px] text-[#96999C]' />\n    //       </div>\n    //       <div\n    //         onClick={() => handleOpenUpdateModal(list)}\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\n    //         <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\n    //       </div>\n    //       <div\n    //         onClick={() => handleClickOpenDialogBox(list)}\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\n    //         <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\n    //       </div>\n    //     </div>\n    //   ),\n    // },\n  ];\n\n  const keyFn = (list) => {\n    return list.data.patientName;\n  };\n  return (\n    <Suspense fallback={<>...</>}>\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\n        <div className='flex justify-between'>\n          <h2 className='border-b-[4px] border-[#3497F9]'>Patients</h2>\n        </div>\n\n        <Table data={mappedPatientData} config={config} keyFn={keyFn} />\n      </div>\n    </Suspense>\n  );\n}\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  console.log(data, config, \"fgfgf\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column?.label}>{column?.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className=\"text-center px-[4px] border-b-[1px] p-[10px]\"\r\n        key={column.label}\r\n      >\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      // console.log(row, \"row\");\r\n      const renderedCells = config?.map((column, index) => {\r\n        // console.log(column, \"column\");\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\"\r\n          >\r\n            {column?.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className=\"\" key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\r\n        <thead>\r\n          <tr className=\"border-b-[1px]\">{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"names":["DashboardTable","patients","useSelector","state","PatientState","mappedPatientData","map","patient","index","tableId","data","config","label","render","list","patientId","patientName","patientEmail","patientPhone","concat","dateTime","createdAt","Date","toLocaleDateString","toLocaleTimeString","time","patientBloodGroup","_jsx","Suspense","fallback","_Fragment","children","_jsxs","className","Table","keyFn","_ref","_data$slice","console","log","page","setPage","useState","rowsPerPage","setRowsPerPage","renderedHeaders","column","header","Fragment","renderedRows","slice","row","renderedCells","PaginationComponent","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value"],"sourceRoot":""}