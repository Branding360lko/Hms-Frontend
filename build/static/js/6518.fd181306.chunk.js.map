{"version":3,"file":"static/js/6518.fd181306.chunk.js","mappings":"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","sources":["components/DialogBoxToDelete.js","components/Table.js","components/superadmin/PatientTable/PatientTable.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogBoxToDelete({\r\n  open,\r\n\r\n  handleAgree,\r\n  setOpen,\r\n  message,\r\n}) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby='alert-dialog-slide-description'>\r\n        <DialogTitle>{\"Delete\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-slide-description'>\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleAgree}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  console.log(data, config, \"fgfgf\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column?.label}>{column?.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className=\"text-center px-[4px] border-b-[1px] p-[10px]\"\r\n        key={column.label}\r\n      >\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      // console.log(row, \"row\");\r\n      const renderedCells = config?.map((column, index) => {\r\n        // console.log(column, \"column\");\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\"\r\n          >\r\n            {column?.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className=\"\" key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\r\n        <thead>\r\n          <tr className=\"border-b-[1px]\">{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import { Suspense } from \"react\";\n\nimport \"./PatientTable.css\";\n\nimport Table from \"../../Table\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdViewKanban } from \"react-icons/md\";\nimport { RiEdit2Fill } from \"react-icons/ri\";\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\nimport { LuHardDriveDownload } from \"react-icons/lu\";\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\n// import Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\n\nimport Snackbars from \"../../SnackBar\";\nimport DialogBoxToDelete from \"../../DialogBoxToDelete\";\n\nimport placeholder from \"../../../assets/imageplaceholder.png\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  useAddPatientMutation,\n  useUpdatePatientByIdMutation,\n  useDeletePatientByIdMutation,\n} from \"../../../Store/Services/PatientService\";\nimport {\n  createPatientChange,\n  updatePatientChange,\n  deletePatientChange,\n} from \"../../../Store/Slices/PatientSlice\";\n\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PatientTable() {\n  const dispatch = useDispatch();\n\n  const { adminLoggedInData } = useSelector((state) => state.AdminState);\n\n  const { patients } = useSelector((state) => state.PatientState);\n  // console.log(patients);\n  const [addPatient, responseAddPatient] = useAddPatientMutation();\n  const [updatePatientById, responseUpdatePatientById] =\n    useUpdatePatientByIdMutation();\n  const [deletePatientById, responseDeletePatientById] =\n    useDeletePatientByIdMutation();\n\n  const [patientId, setPatientId] = React.useState(\"\");\n  const [patientIdToDelete, setPatientIdToDelete] = React.useState(\"\");\n  const [patientData, setPatientData] = React.useState(\"\");\n\n  // states\n  const [patientName, setPatientName] = React.useState(\"\");\n  const [patientEmail, setPatientEmail] = React.useState(\"\");\n  const [patientFatherName, setPatientFatherName] = React.useState(\"\");\n  const [patientHusbandName, setPatientHusbandName] = React.useState(\"\");\n  // const [patientDateOfBirth, setPatientDateOfBirth] = React.useState({\n  //   startDate: new Date(),\n  // });\n  const [patientAge, setPatientAge] = React.useState(\"\");\n  const [patientPhone, setPatientPhone] = React.useState(\"\");\n  const [patientPhone2, setPatientPhone2] = React.useState(\"\");\n  const [patientHeight, setPatientHeight] = React.useState(\"\");\n  const [patientWeight, setPatientWeight] = React.useState(\"\");\n  const [patientBloodGroup, setPatientBloodGroup] = React.useState(\"\");\n  const [patientLocalAddress, setPatientLocalAddress] = React.useState(\"\");\n  const [patientPermanentAddress, setPatientPermanentAddress] =\n    React.useState(\"\");\n  const [patientCity, setPatientCity] = React.useState(\"\");\n  const [patientState, setPatientState] = React.useState(\"\");\n  const [patientCountry, setPatientCountry] = React.useState(\"\");\n  const [patientZipCode, setPatientZipCode] = React.useState(\"\");\n  const [patientImage, setPatientImage] = React.useState();\n  const [patientGender, setPatientGender] = React.useState(\"Female\");\n\n  const [sameAsLocalAddress, setSameAsLocalAddress] = React.useState(false);\n\n  React.useEffect(() => {\n    // console.log(sameAsLocalAddress);\n    if (sameAsLocalAddress === true) {\n      setPatientPermanentAddress(patientLocalAddress);\n    }\n  }, [sameAsLocalAddress, patientLocalAddress]);\n\n  // Snackbar--------------------\n  // ----Succcess\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\n    React.useState(\"\");\n\n  const handleClickSnackbarSuccess = () => {\n    setOpenSnackBarSuccess(true);\n  };\n  // ----Warning\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\n    React.useState(\"\");\n\n  const handleClickSnackbarWarning = () => {\n    setOpenSnackBarWarning(true);\n  };\n  // ----------------------------\n\n  // Dialog Box------------------------\n  const [openDialogBox, setOpenDialogBox] = React.useState(false);\n  const [dialogBoxMessage, setDialogMessage] = React.useState(\n    \"Are you sure you want to delete?\"\n  );\n\n  const handleClickOpenDialogBox = (data) => {\n    setPatientIdToDelete(data?.patientId);\n    setDialogMessage(`Are you sure you want to delete ${data?.patientId} ?`);\n    setOpenDialogBox(true);\n  };\n  const handleAgreeDialogBoxToDelete = () => {\n    deletePatientById(patientIdToDelete);\n    setOpenDialogBox(false);\n  };\n\n  React.useEffect(() => {\n    if (responseDeletePatientById.isSuccess) {\n      dispatch(deletePatientChange(Math.random()));\n      setSnackBarSuccessMessage(responseDeletePatientById?.data?.message);\n      handleClickSnackbarSuccess();\n      handleAgreeDialogBoxToDelete();\n      setPatientIdToDelete(\"\");\n    }\n    if (responseDeletePatientById.isError) {\n      setSnackBarSuccessWarning(responseDeletePatientById?.error?.data?.error);\n      handleClickSnackbarWarning();\n    }\n  }, [responseDeletePatientById.isSuccess, responseDeletePatientById.isError]);\n\n  // ----------------------------------\n\n  // console.log(patientDateOfBirth);\n\n  const date = (dateTime) => {\n    const newdate = new Date(dateTime);\n\n    return newdate.toLocaleDateString();\n  };\n\n  const time = (dateTime) => {\n    const newDate = new Date(dateTime);\n\n    return newDate.toLocaleTimeString();\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"90%\",\n    height: \"90%\",\n    bgcolor: \"background.paper\",\n    borderRadius: \"12px\",\n    border: \"none\",\n    outline: \"none\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  // View Modal\n  const [openViewModal, setOpenViewModal] = React.useState(false);\n  const handleOpenViewModal = (data) => {\n    setPatientData(data);\n    setOpenViewModal(true);\n  };\n  const handleCloseViewModal = () => setOpenViewModal(false);\n\n  const modalViewPatientDetails = (\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\n      <div className='border-b flex gap-[1rem] py-[1rem] w-full'>\n        <h3 className='font-[500]'>Patient ID: </h3>\n        <h3>{patientData?.patientId}</h3>\n      </div>\n      <div className='flex w-full'>\n        <div className='w-[25%] flex flex-col items-center'>\n          <img\n            className='w-[200px] h-[200px] object-contain'\n            src={\n              patientData.patientImage\n                ? process.env.React_App_Base_Image_Url +\n                  patientData.patientImage\n                : placeholder\n            }\n            alt='patientImage'\n          />\n          <button className='buttonFilled w-fit'>Button</button>\n        </div>\n        <div className='w-[75%] flex flex-col gap-[10px] text-[14px]'>\n          <div className='grid grid-cols-2 gap-[10px]'>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Name: </p>\n              <p>{patientData.patientName}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Gender: </p>\n              <p>{patientData.patientGender}</p>\n            </div>\n            {patientData.patientFatherName !== \"\" && (\n              <div className='flex'>\n                <p className='font-[600] w-[150px]'>Father Name: </p>\n                <p>{patientData.patientFatherName}</p>\n              </div>\n            )}\n            {patientData.patientHusbandName !== \"\" && (\n              <div className='flex'>\n                <p className='font-[600] w-[150px]'>Husband Name: </p>\n                <p>{patientData.patientHusbandName}</p>\n              </div>\n            )}\n            {/* <div className='flex'>\n              <p className='font-[600] w-[150px]'>Date Of Birth: </p>\n              <p>{date(patientData.patientDateOfBirth)}</p>\n            </div> */}\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Age: </p>\n              <p>{patientData.patientAge}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Phone: </p>\n              <p>{patientData.patientPhone}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Attendent Phone: </p>\n              <p>{patientData.patientPhone2}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Height: </p>\n              <p>{patientData.patientHeight}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Weight: </p>\n              <p>{patientData.patientWeight}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Blood Group: </p>\n              <p>{patientData.patientBloodGroup}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>City: </p>\n              <p>{patientData.patientCity}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>State: </p>\n              <p>{patientData.patientState}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Country: </p>\n              <p>{patientData.patientCountry}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Zipcode: </p>\n              <p>{patientData.patientZipCode}</p>\n            </div>\n          </div>\n          <div className='flex flex-col gap-[10px]'>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Email Id: </p>\n              <p className='text-[14px]'>{patientData.patientEmail}</p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Local Address: </p>\n              <p className='break-word text-[14px]'>\n                {patientData.patientLocalAddress}\n              </p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Permanent Address: </p>\n              <p className='break-word text-[14px]'>\n                {patientData.patientPermanentAddress}\n              </p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Created On: </p>\n              <p className='break-word text-[14px]'>\n                {`${date(patientData?.createdAt)} ${time(\n                  patientData?.createdAt\n                )}`}\n              </p>\n            </div>\n            <div className='flex'>\n              <p className='font-[600] w-[150px]'>Updated On: </p>\n              <p className='break-word text-[14px]'>\n                {`${date(patientData?.updatedAt)} ${time(\n                  patientData?.updatedAt\n                )}`}\n              </p>\n            </div>\n          </div>\n          {/* <div className='grid grid-cols-2 gap-[10px]'>\n            \n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n\n  // console.log(patientData);\n\n  // Add Modal\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setPatientId(\"\");\n    setPatientName(\"\");\n    setPatientEmail(\"\");\n    setPatientFatherName(\"\");\n    setPatientHusbandName(\"\");\n    // setPatientDateOfBirth(data?.patientDateOfBirth);\n    setPatientAge(\"\");\n    setPatientPhone(\"\");\n    setPatientPhone2(\"\");\n    setPatientHeight(\"\");\n    setPatientWeight(\"\");\n    setPatientBloodGroup(\"\");\n    setPatientLocalAddress(\"\");\n    setPatientPermanentAddress(\"\");\n    setPatientCity(\"\");\n    setPatientState(\"\");\n    setPatientCountry(\"\");\n    setPatientZipCode(\"\");\n    setPatientGender(\"Female\");\n\n    setSameAsLocalAddress(false);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  // Update Modal\n  const [openUpdateModal, setOpenUpdateModal] = React.useState(false);\n  const handleOpenUpdateModal = (data) => {\n    setPatientId(data?.patientId);\n    setPatientName(data?.patientName);\n    setPatientEmail(data?.patientEmail);\n    setPatientFatherName(data?.patientFatherName);\n    setPatientHusbandName(data?.patientHusbandName);\n    // setPatientDateOfBirth(data?.patientDateOfBirth);\n    setPatientAge(data?.patientAge);\n    setPatientPhone(data?.patientPhone);\n    setPatientPhone2(data?.patientPhone2);\n    setPatientHeight(data?.patientHeight);\n    setPatientWeight(data?.patientWeight);\n    setPatientBloodGroup(data?.patientBloodGroup);\n    setPatientLocalAddress(data?.patientLocalAddress);\n    setPatientPermanentAddress(data?.patientPermanentAddress);\n    setPatientCity(data?.patientCity);\n    setPatientState(data?.patientState);\n    setPatientCountry(data?.patientCountry);\n    setPatientZipCode(data?.patientZipCode);\n    setPatientGender(data?.patientGender);\n    setOpenUpdateModal(true);\n    setSameAsLocalAddress(false);\n  };\n  const handleCloseUpdateModal = () => setOpenUpdateModal(false);\n\n  // Add Patient\n  React.useEffect(() => {\n    if (responseAddPatient.isSuccess) {\n      dispatch(createPatientChange(Math.random()));\n      setSnackBarSuccessMessage(responseAddPatient?.data?.message);\n      handleClickSnackbarSuccess();\n      handleClose();\n\n      setPatientImage();\n      setPatientGender(\"Female\");\n      reset();\n    } else if (responseAddPatient.isError) {\n      setSnackBarSuccessWarning(responseAddPatient?.error?.data?.error);\n      handleClickSnackbarWarning();\n    }\n  }, [responseAddPatient.isSuccess, responseAddPatient.isError]);\n\n  const handleAddPatient = (data) => {\n    const patientData = {\n      ...data,\n      patientGender,\n      patientImage,\n      patientPhone,\n      patientPhone2,\n      patientAge,\n      patientLocalAddress,\n      patientPermanentAddress,\n      // patientDateOfBirth,\n    };\n\n    const formData = new FormData();\n\n    formData.append(\"patientName\", patientData?.patientName);\n    formData.append(\"patientEmail\", patientData?.patientEmail);\n    formData.append(\"patientFatherName\", patientData?.patientFatherName);\n    formData.append(\"patientHusbandName\", patientData?.patientHusbandName);\n    // formData.append(\n    //   \"patientDateOfBirth\",\n    //   patientData?.patientDateOfBirth?.startDate\n    // );\n    formData.append(\"patientDateOfBirth\", \"NODATA\");\n    formData.append(\"patientAge\", patientData?.patientAge);\n    formData.append(\"patientPhone\", patientData?.patientPhone);\n    formData.append(\"patientPhone2\", patientData?.patientPhone2);\n    formData.append(\"patientHeight\", patientData?.patientHeight);\n    formData.append(\"patientWeight\", patientData?.patientWeight);\n    formData.append(\"patientGender\", patientData?.patientGender);\n    formData.append(\"patientBloodGroup\", patientData?.patientBloodGroup);\n    formData.append(\"patientLocalAddress\", patientData?.patientLocalAddress);\n    formData.append(\n      \"patientPermanentAddress\",\n      patientData?.patientPermanentAddress\n    );\n    formData.append(\"patientCity\", patientData?.patientCity);\n    formData.append(\"patientState\", patientData?.patientState);\n    formData.append(\"patientCountry\", patientData?.patientCountry);\n    formData.append(\"patientZipCode\", patientData?.patientZipCode);\n    formData.append(\"patientImage\", patientData?.patientImage);\n    formData.append(\n      \"createdBy\",\n      JSON.stringify({\n        email: adminLoggedInData?.adminEmail,\n        name: adminLoggedInData?.adminName,\n        role: adminLoggedInData?.adminRole,\n        id: adminLoggedInData?.adminId,\n      })\n    );\n    formData.append(\n      \"editedBy\",\n      JSON.stringify({\n        email: adminLoggedInData?.adminEmail,\n        name: adminLoggedInData?.adminName,\n        role: adminLoggedInData?.adminRole,\n        id: adminLoggedInData?.adminId,\n      })\n    );\n\n    addPatient(formData);\n  };\n\n  // console.log(patientPermanentAddress);\n\n  const modalADDPatient = (\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\n      <h2 className='border-b py-[1rem]'>Add Patient Information</h2>\n      <form\n        className='flex flex-col gap-[1rem]'\n        onSubmit={handleSubmit(handleAddPatient)}>\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patients Name *</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              required\n              placeholder='Enter patient name'\n              {...register(\"patientName\", { required: true })}\n            />\n            {errors.patientName && (\n              <span className='text-[red]'>This field is required</span>\n            )}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Email</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='email'\n              placeholder='Enter patient email'\n              {...register(\"patientEmail\")}\n            />\n            {/* {errors.patientEmail && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Father Name</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient father name'\n              {...register(\"patientFatherName\")}\n            />\n            {errors.patientFatherName && (\n              <span className='text-[red]'>This field is required</span>\n            )}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Husband Name</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient husband name'\n              {...register(\"patientHusbandName\")}\n            />\n            {errors.patientHusbandName && (\n              <span className='text-[red]'>This field is required</span>\n            )}\n          </div>\n          {/* <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Date Of Birth *</label>\n            <DatePicker\n              className='py-[10px] outline-none border-b'\n              selected={patientDateOfBirth.startDate}\n              maxDate={new Date()}\n              onChange={(date) =>\n                setPatientDateOfBirth({\n                  startDate: date,\n                })\n              }\n            />\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              type=\"date\"\n              required\n              {...register(\"patientDateOfBirth\", { required: true })}\n            />\n            {errors.patientDateOfBirth && (\n              <span className='text-[red]'>This field is required</span>\n            )}\n          </div> */}\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Age </label>\n            {/* <DatePicker\n              className=\"py-[10px] outline-none border-b\"\n              required\n              selected={patientDateOfBirth.startDate}\n              maxDate={new Date()}\n              onChange={(date) =>\n                setPatientDateOfBirth({\n                  startDate: date,\n                })\n              }\n            /> */}\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              placeholder='Enter age'\n              // {...register(\"patientAge\", { required: true })}\n              required\n              value={patientAge}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientAge(value);\n              }}\n            />\n            {/* {errors.patientAge && (\n              <span className='text-[red]'>This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Phone *</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              required\n              minLength={10}\n              maxLength={10}\n              value={patientPhone}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientPhone(value);\n              }}\n              placeholder='Enter patient phone number'\n              // {...register(\"patientPhone\", {\n              //   required: true,\n              //   minLength: 10,\n              //   maxLength: 10,\n              // })}\n            />\n            {/* {errors.patientPhone && (\n              <span className='text-[red]'>\n                This field is required with 10 digits\n              </span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Phone Number of Attendent</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              // required\n              minLength={10}\n              maxLength={10}\n              value={patientPhone2}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientPhone2(value);\n              }}\n              placeholder='Enter phone number of attendent'\n              // {...register(\"patientPhone2\", {\n              //   minLength: 10,\n              //   maxLength: 10,\n              // })}\n            />\n            {/* {errors.patientPhone2 && (\n              <span className='text-[red]'>\n                This field is required with 10 digits\n              </span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Height</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter height'\n              {...register(\"patientHeight\")}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Weight</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter weight'\n              {...register(\"patientWeight\")}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patient Gender *</label>\n            <RadioGroup\n              aria-labelledby='demo-radio-buttons-group-label'\n              value={patientGender}\n              name='radio-buttons-group'\n              onChange={(e) => setPatientGender(e.target.value)}\n              sx={{ display: \"flex\", flexDirection: \"row\" }}>\n              <FormControlLabel\n                value='Female'\n                control={<Radio />}\n                label='Female'\n              />\n              <FormControlLabel value='Male' control={<Radio />} label='Male' />\n              <FormControlLabel\n                value='Other'\n                control={<Radio />}\n                label='Other'\n              />\n            </RadioGroup>\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Blood Group *</label>\n            <select\n              className='py-[11.5px] outline-none border-b bg-transparent'\n              {...register(\"patientBloodGroup\", { required: true })}>\n              <option>O positive</option>\n              <option>O negative</option>\n              <option>A positive</option>\n              <option>A negative</option>\n              <option>B positive</option>\n              <option>B negative</option>\n              <option>AB positive</option>\n              <option>AB negative</option>\n            </select>\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patient Photo</label>\n            <div className='flex flex-col gap-[1rem]'>\n              <input\n                type='file'\n                accept='image/png, image/gif, image/jpeg'\n                onChange={(e) => setPatientImage(e.target.files[0])}\n              />\n\n              <img\n                className='object-contain w-[100px] h-[100px]'\n                src={\n                  patientImage ? URL.createObjectURL(patientImage) : placeholder\n                }\n                alt='placeholderimg'\n              />\n            </div>\n          </div>\n        </div>\n\n        <h3 className='border-b py-[1rem]'>Patient Address Details</h3>\n        <div className='grid grid-cols-2 gap-[2rem] border-b pb-[3rem]'>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Local Address</label>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient local address'\n              value={patientLocalAddress}\n              // {...register(\"patientLocalAddress\")}\n              onChange={(e) => setPatientLocalAddress(e.target.value)}\n            />\n            {/* {errors.patientLocalAddress && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <div className='flex gap-[1rem]'>\n              <label className='text-[14px]'>Permanent Address</label>\n              <div className='flex gap-[10px] items-center'>\n                <input\n                  type='checkbox'\n                  onChange={(e) => setSameAsLocalAddress(e.target.checked)}\n                />\n                <p className='text-[12px]'>Same as local address</p>\n              </div>\n            </div>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              defaultValue={patientPermanentAddress}\n              disabled={sameAsLocalAddress === true ? true : false}\n              placeholder='Enter patient permanent address'\n              // {...register(\"patientPermanentAddress\")}\n              onChange={(e) => setPatientPermanentAddress(e.target.value)}\n            />\n            {/* {errors.patientPermanentAddress && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>City</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient city'\n              {...register(\"patientCity\")}\n            />\n            {/* {errors.patientCity && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>State</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient state'\n              {...register(\"patientState\")}\n            />\n            {/* {errors.patientState && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Country</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient country'\n              {...register(\"patientCountry\")}\n            />\n            {/* {errors.patientCountry && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Zipcode</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='number'\n              placeholder='Enter patient zipcode'\n              {...register(\"patientZipCode\")}\n            />\n            {/* {errors.patientZipcode && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n        </div>\n        <div className='flex gap-[1rem] items-center'>\n          <button\n            type='submit'\n            className='buttonFilled'>{`Save & Print >`}</button>\n          <button className='buttonOutlined'>{`Save >`}</button>\n        </div>\n      </form>\n    </div>\n  );\n\n  // Update Patient\n  React.useEffect(() => {\n    if (responseUpdatePatientById.isSuccess) {\n      dispatch(updatePatientChange(Math.random()));\n      setSnackBarSuccessMessage(responseUpdatePatientById?.data?.message);\n      handleClickSnackbarSuccess();\n      handleCloseUpdateModal();\n\n      setPatientImage();\n      setPatientGender(\"Female\");\n      reset();\n    } else if (responseUpdatePatientById.isError) {\n      setSnackBarSuccessWarning(responseUpdatePatientById?.error?.data?.error);\n      handleClickSnackbarWarning();\n    }\n  }, [responseUpdatePatientById.isSuccess, responseUpdatePatientById.isError]);\n\n  // console.log(responseUpdatePatientById);\n\n  const handleUpdatePatient = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n\n    formData.append(\"patientName\", patientName);\n    formData.append(\"patientEmail\", patientEmail);\n    formData.append(\"patientFatherName\", patientFatherName);\n    formData.append(\"patientHusbandName\", patientHusbandName);\n    // formData.append(\"patientDateOfBirth\", patientDateOfBirth?.startDate);\n    formData.append(\"patientDateOfBirth\", \"NODATA\");\n    formData.append(\"patientAge\", patientAge);\n    formData.append(\"patientPhone\", patientPhone);\n    formData.append(\"patientPhone2\", patientPhone2);\n    formData.append(\"patientHeight\", patientHeight);\n    formData.append(\"patientWeight\", patientWeight);\n    formData.append(\"patientGender\", patientGender);\n    formData.append(\"patientBloodGroup\", patientBloodGroup);\n    formData.append(\"patientLocalAddress\", patientLocalAddress);\n    formData.append(\"patientPermanentAddress\", patientPermanentAddress);\n    formData.append(\"patientCity\", patientCity);\n    formData.append(\"patientState\", patientState);\n    formData.append(\"patientCountry\", patientCountry);\n    formData.append(\"patientZipCode\", patientZipCode);\n    formData.append(\"patientImage\", patientImage);\n    formData.append(\n      \"editedBy\",\n      JSON.stringify({\n        email: adminLoggedInData?.adminEmail,\n        name: adminLoggedInData?.adminName,\n        role: adminLoggedInData?.adminRole,\n        id: adminLoggedInData?.adminId,\n      })\n    );\n\n    const updateData = {\n      id: patientId,\n      data: formData,\n    };\n\n    updatePatientById(updateData);\n  };\n\n  const modalUpdatePatient = (\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\n      <h2 className='border-b py-[1rem]'>Update Patient Information</h2>\n      <form className='flex flex-col gap-[1rem]' onSubmit={handleUpdatePatient}>\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patients Name</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              required\n              value={patientName}\n              placeholder='Enter patient name'\n              onChange={(e) => setPatientName(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Email</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='email'\n              value={patientEmail}\n              placeholder='Enter patient email'\n              onChange={(e) => setPatientEmail(e.target.value)}\n            />\n          </div>\n          {patientFatherName !== \"\" && (\n            <div className='flex flex-col gap-[6px]'>\n              <label className='text-[14px]'>Father Name</label>\n              <input\n                className='py-[10px] outline-none border-b'\n                type='text'\n                value={patientFatherName}\n                placeholder='Enter patient father name'\n                onChange={(e) => setPatientFatherName(e.target.value)}\n              />\n            </div>\n          )}\n          {patientHusbandName !== \"\" && (\n            <div className='flex flex-col gap-[6px]'>\n              <label className='text-[14px]'>Husband Name</label>\n              <input\n                className='py-[10px] outline-none border-b'\n                type='text'\n                value={patientHusbandName}\n                placeholder='Enter patient husband name'\n                onChange={(e) => setPatientHusbandName(e.target.value)}\n              />\n            </div>\n          )}\n          {/* <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Date Of Birth</label>\n            <DatePicker\n              className='py-[10px] outline-none border-b'\n              selected={patientDateOfBirth.startDate}\n              maxDate={new Date()}\n              onChange={(date) =>\n                setPatientDateOfBirth({\n                  startDate: date,\n                })\n              }\n            />\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              type=\"date\"\n              required\n              value={patientDateOfBirth}\n              onChange={(e) => setPatientDateOfBirth(e.target.value)}\n            />\n          </div> */}\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Age</label>\n            {/* <DatePicker\n              className=\"py-[10px] outline-none border-b\"\n              required\n              selected={patientDateOfBirth.startDate}\n              maxDate={new Date()}\n              onChange={(date) =>\n                setPatientDateOfBirth({\n                  startDate: date,\n                })\n              }\n            /> */}\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              placeholder='Enter age'\n              // value={patientAge}\n              // onChange={(e) => setPatientAge(e.target.value)}\n              required\n              value={patientAge}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientAge(value);\n              }}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Phone</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              required\n              minLength={10}\n              maxLength={10}\n              placeholder='Enter patient phone number'\n              value={patientPhone}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientPhone(value);\n              }}\n              // onChange={(e) => setPatientPhone(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Phone number of attendent</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              // type='number'\n              minLength={10}\n              maxLength={10}\n              placeholder='Enter phone number of attendent'\n              value={patientPhone2}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setPatientPhone2(value);\n              }}\n              // onChange={(e) => setPatientPhone2(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Height</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter height'\n              value={patientHeight}\n              onChange={(e) => setPatientHeight(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Weight</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter weight'\n              value={patientWeight}\n              onChange={(e) => setPatientWeight(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patient Gender</label>\n            <RadioGroup\n              aria-labelledby='demo-radio-buttons-group-label'\n              value={patientGender}\n              name='radio-buttons-group'\n              onChange={(e) => setPatientGender(e.target.value)}\n              sx={{ display: \"flex\", flexDirection: \"row\" }}>\n              <FormControlLabel\n                value='Female'\n                control={<Radio />}\n                label='Female'\n              />\n              <FormControlLabel value='Male' control={<Radio />} label='Male' />\n              <FormControlLabel\n                value='Other'\n                control={<Radio />}\n                label='Other'\n              />\n            </RadioGroup>\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Blood Group</label>\n            <select\n              className='py-[11.5px] outline-none border-b bg-transparent'\n              value={patientBloodGroup}\n              onChange={(e) => setPatientBloodGroup(e.target.value)}>\n              <option>O positive</option>\n              <option>O negative</option>\n              <option>A positive</option>\n              <option>A negative</option>\n              <option>B positive</option>\n              <option>B negative</option>\n              <option>AB positive</option>\n              <option>AB negative</option>\n            </select>\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Patient Photo</label>\n            <div className='flex flex-col gap-[1rem]'>\n              <input\n                type='file'\n                accept='image/png, image/gif, image/jpeg'\n                onChange={(e) => setPatientImage(e.target.files[0])}\n              />\n\n              <img\n                className='object-contain w-[100px] h-[100px]'\n                src={\n                  patientImage ? URL.createObjectURL(patientImage) : placeholder\n                }\n                alt='placeholderimg'\n              />\n            </div>\n          </div>\n        </div>\n\n        <h3 className='border-b py-[1rem]'>Patient Address Details</h3>\n        <div className='grid grid-cols-2 gap-[2rem] border-b pb-[3rem]'>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Local Address</label>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient local address'\n              value={patientLocalAddress}\n              // {...register(\"patientLocalAddress\")}\n              onChange={(e) => setPatientLocalAddress(e.target.value)}\n            />\n            {/* {errors.patientLocalAddress && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <div className='flex gap-[1rem]'>\n              <label className='text-[14px]'>Permanent Address</label>\n              <div className='flex gap-[10px] items-center'>\n                <input\n                  type='checkbox'\n                  onChange={(e) => setSameAsLocalAddress(e.target.checked)}\n                />\n                <p className='text-[12px]'>Same as local address</p>\n              </div>\n            </div>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              value={patientPermanentAddress}\n              disabled={sameAsLocalAddress === true ? true : false}\n              placeholder='Enter patient permanent address'\n              // {...register(\"patientPermanentAddress\")}\n              onChange={(e) => setPatientPermanentAddress(e.target.value)}\n            />\n            {/* {errors.patientPermanentAddress && (\n              <span className=\"text-[red]\">This field is required</span>\n            )} */}\n          </div>\n          {/* <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Local Address</label>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient local address'\n              value={patientLocalAddress}\n              onChange={(e) => setPatientLocalAddress(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Permanent Address</label>\n            <textarea\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient permanent address'\n              value={patientPermanentAddress}\n              onChange={(e) => setPatientPermanentAddress(e.target.value)}\n            />\n          </div> */}\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>City</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient city'\n              value={patientCity}\n              onChange={(e) => setPatientCity(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>State</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient state'\n              value={patientState}\n              onChange={(e) => setPatientState(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Country</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='text'\n              placeholder='Enter patient country'\n              value={patientCountry}\n              onChange={(e) => setPatientCountry(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col gap-[6px]'>\n            <label className='text-[14px]'>Zipcode</label>\n            <input\n              className='py-[10px] outline-none border-b'\n              type='number'\n              placeholder='Enter patient zipcode'\n              value={patientZipCode}\n              onChange={(e) => setPatientZipCode(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className='flex gap-[1rem] items-center'>\n          <button type='submit' className='buttonFilled'>{`Save >`}</button>\n        </div>\n      </form>\n    </div>\n  );\n\n  const [search, setSearch] = React.useState(\"\");\n\n  const filteredArray = patients?.filter((data) => {\n    if (search !== \"\") {\n      const userSearch = search.toLowerCase();\n      const searchInData = data?.patientName?.toLowerCase();\n\n      return searchInData?.startsWith(userSearch);\n    }\n    return data;\n  });\n\n  const mappedBillData = filteredArray;\n\n  const config = [\n    {\n      label: \"UHID\",\n      render: (list) => list.patientId,\n    },\n    {\n      label: \"Patient Name\",\n      render: (list) => list.patientName,\n    },\n    {\n      label: \"Patient Email\",\n      render: (list) => list.patientEmail,\n    },\n    {\n      label: \"Patient Phone\",\n      render: (list) => list.patientPhone,\n    },\n    {\n      label: \"Date Created\",\n      render: (list) => date(list.createdAt),\n    },\n    {\n      label: \"Blood Group\",\n      render: (list) => list.patientBloodGroup,\n    },\n    {\n      label: \"Action\",\n      render: (list) => (\n        <div className='flex gap-[10px] justify-center'>\n          <div\n            onClick={() => handleOpenViewModal(list)}\n            className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\n            <MdViewKanban className='text-[25px] text-[#96999C]' />\n          </div>\n          <div\n            onClick={() => handleOpenUpdateModal(list)}\n            className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\n            <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\n          </div>\n          {/* <div\n            onClick={() => handleClickOpenDialogBox(list)}\n            className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\n            <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\n          </div> */}\n        </div>\n      ),\n    },\n  ];\n\n  const keyFn = (list) => {\n    return list.patientName;\n  };\n  return (\n    <Suspense fallback={<>...</>}>\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\n        <div className='flex justify-between'>\n          <h2 className='border-b-[4px] border-[#3497F9]'>Patient</h2>\n          <button\n            onClick={handleOpen}\n            className='bg-[#3497F9] text-white p-[10px] rounded-md'>\n            + Add Patient\n          </button>\n        </div>\n        <div className='flex justify-between'>\n          <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\n            <FaSearch className='text-[#56585A]' />\n            <input\n              className='bg-transparent outline-none'\n              placeholder='Search by patient name'\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          </div>\n          {/* <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\n            <input type='date' className='bg-transparent outline-none' />\n          </div> */}\n        </div>\n        <Table data={mappedBillData} config={config} keyFn={keyFn} />\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='modal-modal-title'\n        aria-describedby='modal-modal-description'>\n        <Box sx={style}>\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\n              Add Patient\n            </h1>\n          </Typography>\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\n            {modalADDPatient}\n          </Typography>\n        </Box>\n      </Modal>\n      <Modal\n        open={openUpdateModal}\n        onClose={handleCloseUpdateModal}\n        aria-labelledby='modal-modal-title'\n        aria-describedby='modal-modal-description'>\n        <Box sx={style}>\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\n              Update Patient\n            </h1>\n          </Typography>\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\n            {modalUpdatePatient}\n          </Typography>\n        </Box>\n      </Modal>\n      <Modal\n        open={openViewModal}\n        onClose={handleCloseViewModal}\n        aria-labelledby='modal-modal-title'\n        aria-describedby='modal-modal-description'>\n        <Box sx={style}>\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\n            <div className='flex justify-between items-center'>\n              <h1 className='headingBottomUnderline w-fit pb-[10px]'>\n                Patient Details\n              </h1>\n              <Link\n                // onClick={handleGeneratePdf}\n                target='_blank'\n                to={patientData?.patientId}\n                // to={opdPatientData?.data?.mainId}\n                // to={`${browserLinks.superadmin.category}/${browserLinks.superadmin.internalPages.opdPatients}/${opdPatientData?.data?.mainId}`}\n                className='buttonFilled flex items-center gap-[10px]'>\n                <LuHardDriveDownload />\n                <p>Download</p>\n              </Link>\n            </div>\n          </Typography>\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\n            {modalViewPatientDetails}\n          </Typography>\n        </Box>\n      </Modal>\n      {/* Success Snackbar */}\n      <Snackbars\n        open={openSnackbarSuccess}\n        setOpen={setOpenSnackBarSuccess}\n        severity='success'\n        message={snackBarMessageSuccess}\n      />\n      {/* Warning Snackbar */}\n      <Snackbars\n        open={openSnackbarWarning}\n        setOpen={setOpenSnackBarWarning}\n        severity='warning'\n        message={snackBarMessageWarning}\n      />\n      <DialogBoxToDelete\n        open={openDialogBox}\n        setOpen={setOpenDialogBox}\n        handleAgree={handleAgreeDialogBoxToDelete}\n        message={dialogBoxMessage}\n      />\n    </Suspense>\n  );\n}\n"],"names":["Transition","React","props","ref","_jsx","Slide","direction","DialogBoxToDelete","_ref","open","handleAgree","setOpen","message","handleClose","children","_jsxs","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","_data$slice","data","config","keyFn","console","log","page","setPage","useState","rowsPerPage","setRowsPerPage","renderedHeaders","map","column","header","Fragment","label","className","renderedRows","slice","row","index","renderedCells","render","concat","PaginationComponent","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","PatientTable","dispatch","useDispatch","adminLoggedInData","useSelector","state","AdminState","patients","PatientState","addPatient","responseAddPatient","useAddPatientMutation","updatePatientById","responseUpdatePatientById","useUpdatePatientByIdMutation","deletePatientById","responseDeletePatientById","useDeletePatientByIdMutation","patientId","setPatientId","patientIdToDelete","setPatientIdToDelete","patientData","setPatientData","patientName","setPatientName","patientEmail","setPatientEmail","patientFatherName","setPatientFatherName","patientHusbandName","setPatientHusbandName","patientAge","setPatientAge","patientPhone","setPatientPhone","patientPhone2","setPatientPhone2","patientHeight","setPatientHeight","patientWeight","setPatientWeight","patientBloodGroup","setPatientBloodGroup","patientLocalAddress","setPatientLocalAddress","patientPermanentAddress","setPatientPermanentAddress","patientCity","setPatientCity","patientState","setPatientState","patientCountry","setPatientCountry","patientZipCode","setPatientZipCode","patientImage","setPatientImage","patientGender","setPatientGender","sameAsLocalAddress","setSameAsLocalAddress","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","handleClickSnackbarSuccess","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","handleClickSnackbarWarning","openDialogBox","setOpenDialogBox","dialogBoxMessage","setDialogMessage","handleAgreeDialogBoxToDelete","_responseDeletePatien","_responseDeletePatien2","_responseDeletePatien3","isSuccess","deletePatientChange","Math","random","isError","error","date","dateTime","Date","toLocaleDateString","time","toLocaleTimeString","register","handleSubmit","watch","reset","formState","errors","useForm","style","position","top","left","transform","width","height","bgcolor","borderRadius","border","outline","boxShadow","p","openViewModal","setOpenViewModal","modalViewPatientDetails","src","process","placeholder","alt","createdAt","updatedAt","openUpdateModal","setOpenUpdateModal","handleCloseUpdateModal","_responseAddPatient$d","createPatientChange","_responseAddPatient$e","_responseAddPatient$e2","modalADDPatient","onSubmit","formData","FormData","append","JSON","stringify","email","adminEmail","name","adminName","role","adminRole","adminId","type","required","onChange","e","replace","minLength","maxLength","RadioGroup","sx","display","flexDirection","FormControlLabel","control","Radio","accept","files","URL","createObjectURL","checked","defaultValue","disabled","_responseUpdatePatien","updatePatientChange","_responseUpdatePatien2","_responseUpdatePatien3","modalUpdatePatient","preventDefault","search","setSearch","mappedBillData","filter","_data$patientName","userSearch","toLowerCase","searchInData","startsWith","list","MdViewKanban","handleOpenUpdateModal","RiEdit2Fill","Suspense","fallback","_Fragment","handleOpen","FaSearch","Table","Modal","Box","Typography","variant","component","mt","handleCloseViewModal","Link","to","LuHardDriveDownload","Snackbars","severity"],"sourceRoot":""}