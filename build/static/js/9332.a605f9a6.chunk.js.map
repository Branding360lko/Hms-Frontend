{"version":3,"file":"static/js/9332.a605f9a6.chunk.js","mappings":"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","sources":["components/DialogBoxToDelete.js","components/Nurse/SingleBedComp/SingleBedComp.js","components/Nurse/AddBedSelector/AddBedSelector.js","components/Receptionist/AddOtherCharges/AddOtherCharges.js","components/Nurse/IPDPatientTableAndForm/IPD_PatientTable.js","components/Receptionist/IpdChargesShowcase/IpdChargesShowcase.js","components/Receptionist/IpdPatientMedDocLabChargesShowcase/IpdPatientMedDocLabChargesShowcase.js","components/Receptionist/PatientBedChargesCal/PatientBedChargesCal.js","components/Table.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogBoxToDelete({\r\n  open,\r\n\r\n  handleAgree,\r\n  setOpen,\r\n  message,\r\n}) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby='alert-dialog-slide-description'>\r\n        <DialogTitle>{\"Delete\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-slide-description'>\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleAgree}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { FaBed } from \"react-icons/fa\";\n\nconst BedComponent = ({ bed, onSelectBed, isSelected }) => {\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (bed.bedAvailableOrNot) {\n      onSelectBed(bed);\n    }\n  };\n\n  // console.log(\"bed in bed Comp:\", bed);\n\n  return (\n    <button\n      onClick={(e) => handleClick(e)}\n      className={`text-3xl justify-center items-center p-2 rounded-md ${\n        bed.bedAvailableOrNot ? \"text-green-500\" : \"text-red-500\"\n      } ${isSelected ? \" bg-blue-950\" : \"\"}`}\n      disabled={!bed.bedAvailableOrNot}\n    >\n      <FaBed />\n      <span className=\"text-xl\">{bed.bedNumber}</span>\n    </button>\n  );\n};\n\nexport default BedComponent;\n","import { useEffect, useState } from \"react\";\nimport BedComponent from \"../SingleBedComp/SingleBedComp\";\n\nconst BedSelector = ({ beds, handleBedSelect }) => {\n  const [selectedBed, setSelectedBed] = useState(null);\n  const [selectedFloor, setSelectedFloor] = useState(1);\n\n  const handleSelectBed = (bed) => {\n    setSelectedBed(bed);\n    handleBedSelect(bed);\n  };\n\n  // console.log(\"beds in bed selector\", beds);\n\n  const bedTypes = [...new Set(beds.map((bed) => bed.bedType))];\n  const bedSubTypes = [...new Set(beds.map((bed) => bed.bedSubType))];\n  const floors = [...new Set(beds.map((bed) => bed.bedFloor))];\n\n  const bedTypeGroups = bedTypes.map((type) => ({\n    type,\n    subTypes: bedSubTypes.filter((subType) =>\n      beds.some((bed) => bed.bedType === type && bed.bedSubType === subType)\n    ),\n  }));\n\n  const filteredBeds = selectedFloor\n    ? beds.filter((bed) => bed.bedFloor === selectedFloor)\n    : beds;\n  // console.log(\"bedTypes:\", bedTypes);\n  // console.log(\"filteredBeds:\", filteredBeds);\n  return (\n    <div>\n      <div className=\"flex gap-2 mb-2\">\n        {floors.map((floor) => (\n          <button\n            key={floor}\n            type=\"button\"\n            className={`${\n              selectedFloor === floor\n                ? \"bg-blue-500 text-white\"\n                : \"bg-gray-200 text-gray-600\"\n            } rounded-full px-4 py-2`}\n            onClick={() => setSelectedFloor(floor)}\n          >\n            Floor {floor}\n          </button>\n        ))}\n      </div>\n      {bedTypeGroups.map((group) => (\n        <div\n          key={group.type}\n          className=\"flex flex-col justify-center items-start gap-3 px-5 py-2 mb-5 mt-2 rounded-md border border-b-gray-700\"\n        >\n          <h2 className=\" px-2 py-[1px] border border-gray-400 rounded-md\">\n            {group.type}\n          </h2>\n          {group.subTypes.map((subType) => (\n            <div key={subType}>\n              <h3 className=\"border-b-2 border-gray-400 \">{subType}</h3>\n              <div className=\"flex justify-start items-start gap-5\">\n                {filteredBeds\n                  .filter(\n                    (bed) =>\n                      bed.bedType === group.type && bed.bedSubType === subType\n                  )\n                  .map((bed) => (\n                    <BedComponent\n                      key={bed.bedId}\n                      bed={bed}\n                      onSelectBed={handleSelectBed}\n                      isSelected={\n                        selectedBed && selectedBed.bedId === bed.bedId\n                      }\n                    />\n                  ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n      {/* {bedSubTypes.map((subType) => (\n        <div>\n          <h2>{}</h2>\n          <h3>{subType}</h3>\n          <div className=\"flex justify-start items-start gap-5\">\n            {filteredBeds\n              .filter((bed) => bed.bedSubType === subType)\n              .map((bed) => (\n                <BedComponent\n                  key={bed.bedId}\n                  bed={bed}\n                  onSelectBed={handleSelectBed}\n                  isSelected={selectedBed && selectedBed.bedId === bed.bedId}\n                />\n              ))}\n          </div>\n        </div>\n      ))} */}\n      {/* {bedTypes.map((type) => (\n        <div\n          key={type}\n          className=\"flex flex-col justify-center items-start px-5 py-2 mb-5 mt-2 rounded-md border border-b-gray-700\"\n        >\n          <h2>{type}</h2>\n        </div>\n      ))} */}\n      {selectedBed && (\n        <div className=\"selected-bed-details\">\n          <h3>You have selected the bed:</h3>\n          <p>Bed Id: {selectedBed.bedNumber}</p>\n          <p>Floor No: {selectedBed.bedFloor}</p>\n          <p>Bed Type: {selectedBed.bedType}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BedSelector;\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction AddOtherCharges({ handleAddMedicalCharges, mainId }) {\n  const [items, setItems] = useState([\n    { itemName: \"\", quantity: 0, price: 0, date: \"\" },\n  ]);\n  const [formError, setFormError] = useState(\"\");\n\n  const handleAddRow = () => {\n    // Validate the last row before adding a new one\n    const lastItem = items[items.length - 1];\n    if (\n      lastItem.itemName &&\n      lastItem.quantity > 0 &&\n      lastItem.price > 0 &&\n      lastItem.date\n    ) {\n      setItems([...items, { itemName: \"\", quantity: 0, price: 0, date: \"\" }]);\n      setFormError(\"\");\n    } else {\n      setFormError(\"Please complete the current row before adding a new one.\");\n    }\n  };\n\n  const handleInputChange = (index, field, value) => {\n    const updatedItems = items.map((item, i) =>\n      i === index\n        ? {\n            ...item,\n            [field]:\n              field === \"quantity\" || field === \"price\" ? Number(value) : value,\n          }\n        : item\n    );\n    setItems(updatedItems);\n  };\n\n  const handleDeleteRow = (index) => {\n    const updatedItems = items.filter((_, i) => i !== index);\n    setItems(updatedItems);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Validate all rows before submitting\n    for (const item of items) {\n      if (\n        !item.itemName ||\n        item.quantity <= 0 ||\n        item.price <= 0 ||\n        !item.date\n      ) {\n        setFormError(\"Please complete all fields in all rows.\");\n        return;\n      }\n    }\n    setFormError(\"\");\n\n    const updateData = {\n      id: mainId,\n      data: { items: items },\n    };\n\n    handleAddMedicalCharges(updateData);\n\n    console.log(\"items:\", items);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <h3>Items</h3>\n      <form\n        onSubmit={handleSubmit}\n        className=\" flex flex-col justify-start items-start gap-5\"\n      >\n        <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\n          <thead>\n            <tr className=\"border-b-[1px]\">\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Item Name\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Quantity\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Price\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Date\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"text-gray-500 font-semibold\">\n            {items.map((item, index) => (\n              <tr key={index}>\n                <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  <input\n                    required\n                    type=\"text\"\n                    className=\"text-center border py-1 rounded-md\"\n                    value={item.itemName}\n                    onChange={(e) =>\n                      handleInputChange(index, \"itemName\", e.target.value)\n                    }\n                  />\n                </td>\n                <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  <input\n                    required\n                    type=\"number\"\n                    min={1}\n                    className=\"text-center border py-1 rounded-md\"\n                    value={item.quantity}\n                    onChange={(e) =>\n                      handleInputChange(index, \"quantity\", e.target.value)\n                    }\n                  />\n                </td>\n                <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  <input\n                    required\n                    type=\"number\"\n                    min={0.01}\n                    step={0.01}\n                    className=\"text-center border py-1 rounded-md\"\n                    value={item.price}\n                    onChange={(e) =>\n                      handleInputChange(index, \"price\", e.target.value)\n                    }\n                  />\n                </td>\n                <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  <input\n                    required\n                    type=\"date\"\n                    className=\"text-center\"\n                    value={item.date}\n                    onChange={(e) =>\n                      handleInputChange(index, \"date\", e.target.value)\n                    }\n                  />\n                </td>\n                <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  <button\n                    type=\"button\"\n                    className=\"text-red-500 px-2 py-1 bg-red-100 rounded-md hover:bg-red-200\"\n                    onClick={() => handleDeleteRow(index)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"w-full flex justify-between items-center\">\n          <button\n            type=\"button\"\n            className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded\"\n            onClick={handleAddRow}\n          >\n            +\n          </button>\n          <div className=\"mt-4\">\n            <h3>\n              Total Items Value:{\" \"}\n              {items\n                .reduce((sum, item) => sum + item.quantity * item.price, 0)\n                .toFixed(2)}\n            </h3>\n          </div>\n        </div>\n        {formError && <p className=\"text-red-500 mt-2\">{formError}</p>}\n        <button type=\"submit\" className=\" buttonFilled hover:bg-blue-600\">\n          Save Charges\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddOtherCharges;\n","import { Suspense } from \"react\";\nimport \"./IPD_PatientTable.css\";\n\nimport Table from \"../../Table\";\n\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdViewKanban } from \"react-icons/md\";\nimport { RiEdit2Fill } from \"react-icons/ri\";\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\nimport { LuHardDriveDownload } from \"react-icons/lu\";\nimport { MdOutlineReceiptLong } from \"react-icons/md\";\nimport { FaBed } from \"react-icons/fa\";\n\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport placeholder from \"../../../assets/imageplaceholder.png\";\n\nimport * as React from \"react\";\nimport Snackbars from \"../../SnackBar\";\nimport DialogBoxToDelete from \"../../DialogBoxToDelete\";\n\nimport Select from \"react-select\";\n\nimport browserLinks from \"../../../browserlinks\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  useCreateIPDPatientMutation,\n  useUpdateIPDPatientByIdMutation,\n  useDeleteIPDPatientByIdMutation,\n  useAddIPDPatientBalanceByIdMutation,\n  useIpdPatientDischargeRequestMutation,\n  useIpdPatientFinalBalanceCalGetAllMutation,\n  useIpdPatientFinalDischargeByIdMutation,\n} from \"../../../Store/Services/IPDPatientService\";\n\nimport {\n  createIpdPatientChange,\n  updateIpdPatientChange,\n  deleteIpdPatientChange,\n} from \"../../../Store/Slices/IPDPatientSlice\";\n\n// Add Bed Imports\n\nimport BedSelector from \"../AddBedSelector/AddBedSelector\";\n\nimport { Link } from \"react-router-dom\";\nimport { useUpdateBedAvailabilityMutation } from \"../../../Store/Services/BedService\";\n\nimport PatientBedChargesCal from \"../../Receptionist/PatientBedChargesCal/PatientBedChargesCal\";\nimport AddOtherCharges from \"../../Receptionist/AddOtherCharges/AddOtherCharges\";\nimport {\n  useGetIPDPatientBalanceByIdQuery,\n  useUpdateIPDPatientLabTestChargesByIdMutation,\n  useUpdateIPDPatientMedicalChargesByIdMutation,\n} from \"../../../Store/Services/IPDPatientBalanceService\";\nimport {\n  updateIpdPatientLabTestChargesChange,\n  updateIpdPatientMedicalChargesChange,\n} from \"../../../Store/Slices/IPDPatientBalanceSlice\";\nimport IpdChargesShowcase from \"../../Receptionist/IpdChargesShowcase/IpdChargesShowcase\";\nimport axios from \"axios\";\n\nexport default function IPD_PatientTable() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { nurses } = useSelector((state) => state.NurseState);\n  const { doctors } = useSelector((state) => state.DoctorState);\n  const { patients } = useSelector((state) => state.PatientState);\n  const { ipdPatients } = useSelector((state) => state.IPDPatientState);\n\n  const [createIPDPatient, responseCreateIPDPatient] =\n    useCreateIPDPatientMutation();\n  const [updateIPDPatientById, responseUpdateIPDPatientById] =\n    useUpdateIPDPatientByIdMutation();\n  const [deleteIPDPatientById, responseDeleteIPDPatientById] =\n    useDeleteIPDPatientByIdMutation();\n\n  // Snackbar--------------------\n  // ----Succcess\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\n    React.useState(\"\");\n\n  const handleClickSnackbarSuccess = () => {\n    setOpenSnackBarSuccess(true);\n  };\n  // ----Warning\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\n    React.useState(\"\");\n\n  const handleClickSnackbarWarning = () => {\n    setOpenSnackBarWarning(true);\n  };\n  // ----------------------------\n\n  // Dialog Box------------------------\n  const [openDialogBox, setOpenDialogBox] = React.useState(false);\n  const [dialogBoxMessage, setDialogMessage] = React.useState(\n    \"Are you sure you want to delete?\"\n  );\n\n  const handleClickOpenDialogBox = (data) => {\n    setMainId(data?.data?.mainId);\n    setDialogMessage(`Are you sure you want to delete ${data?.data?.mainId} ?`);\n    setOpenDialogBox(true);\n  };\n  const handleAgreeDialogBoxToDelete = () => {\n    deleteIPDPatientById(mainId);\n    setOpenDialogBox(false);\n  };\n\n  React.useEffect(() => {\n    if (responseDeleteIPDPatientById.isSuccess) {\n      dispatch(deleteIpdPatientChange(Math.random()));\n      setSnackBarSuccessMessage(responseDeleteIPDPatientById?.data?.message);\n      handleClickSnackbarSuccess();\n      handleAgreeDialogBoxToDelete();\n      setMainId(\"\");\n    }\n  }, [\n    responseDeleteIPDPatientById.isSuccess,\n    responseDeleteIPDPatientById.isError,\n  ]);\n  // ---------------------------------------------\n\n  // Operation States\n  const [ipdPatientId, setIpdPatientId] = React.useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  const [ipdDoctorId, setIpdDoctorId] = React.useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  const [ipdNurseId, setIpdNurseId] = React.useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  // View Modal State\n\n  const [openViewModal, setOpenViewModal] = React.useState(false);\n\n  const [ipdDepositAmount, setIpdDespositAmount] = React.useState();\n  const [ipdPaymentMode, setIpdPaymentMode] = React.useState(\"UPI\");\n  const [ipdWardNo, setIpdWardNo] = React.useState();\n  const [ipdFloorNo, setIpdFloorNo] = React.useState();\n  const [ipdRoomNo, setIpdRoomNo] = React.useState();\n  const [ipdBedNo, setIpdBedNo] = React.useState();\n  const [ipdPatientNotes, setIpdPatientNotes] = React.useState(\"\");\n  const [submitButton, setSubmitButton] = React.useState();\n\n  const [mainId, setMainId] = React.useState(\"\");\n  const [ipdPatientData, setIpdPatientData] = React.useState(\"\");\n  // -----------------------------------------------------------\n\n  // Add Bed Form Open State and Logic\n  const [addBedFormOpen, setAddBedFormOpen] = React.useState(false);\n  const [selectedBed, setSelectedBed] = React.useState(null);\n\n  const [updatedBed, setUpdatedBed] = React.useState(null);\n  const [previousBed, setPreviousBed] = React.useState(null);\n\n  const [currentPatientBed, setCurrentPatientBed] = React.useState(null);\n\n  const [currentPatientBedCharges, setCurrentPatientBedCharges] =\n    React.useState(0);\n\n  const [updateBedAvailability, responseUpdateBedAvailability] =\n    useUpdateBedAvailabilityMutation();\n\n  // console.log(\"selectedBed:\", selectedBed);\n\n  const { beds } = useSelector((state) => state.BedState);\n\n  // console.log(\"beds in ipd:\", beds);\n\n  // IPD ADD BALANCE\n\n  const [openAddBalanceModal, setOpenAddBalanceModal] = React.useState(false);\n\n  const [ipdAddBalanceData, setIpdAddBalanceData] = React.useState({\n    ipdPatientMainId: null,\n  });\n\n  const [ipdAddBalanceNote, setIpdAddBalanceNote] = React.useState(\"\");\n\n  const [addIpdPatientBalance, responeAddIpdPatientBalance] =\n    useAddIPDPatientBalanceByIdMutation();\n\n  const updateIpdBalanceState = (newState) => {\n    setIpdAddBalanceData((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  function handleAddBedFormOpen(e) {\n    e.preventDefault();\n\n    setAddBedFormOpen(true);\n  }\n\n  const handleBedSelect = (bed) => {\n    setSelectedBed(bed);\n  };\n\n  const handleUpdatedBedSelect = (bed) => {\n    setUpdatedBed(bed);\n  };\n\n  // Add Medical Charges State and Logic\n\n  const [addMedicalCharges, responseAddMedicalCharges] =\n    useUpdateIPDPatientMedicalChargesByIdMutation();\n\n  const handleAddMedicalCharges = (updateData) => {\n    console.log(\"updateData:\", updateData);\n    addMedicalCharges(updateData);\n  };\n\n  React.useEffect(() => {\n    if (responseAddMedicalCharges.isSuccess) {\n      dispatch(updateIpdPatientMedicalChargesChange(Math.random()));\n\n      setSnackBarSuccessMessage(responseAddMedicalCharges?.data?.message);\n      handleClickSnackbarSuccess();\n      handleCloseUpdateModal();\n    } else if (responseAddMedicalCharges.isError) {\n      setSnackBarSuccessWarning(responseAddMedicalCharges?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [responseAddMedicalCharges.isSuccess, responseAddMedicalCharges.isError]);\n\n  // Add Lab Charges State and Logic\n\n  const [addLabCharges, responseAddLabCharges] =\n    useUpdateIPDPatientLabTestChargesByIdMutation();\n\n  const handleAddLabCharges = (updateData) => {\n    addLabCharges(updateData);\n  };\n\n  React.useEffect(() => {\n    if (responseAddLabCharges.isSuccess) {\n      dispatch(updateIpdPatientLabTestChargesChange(Math.random()));\n\n      setSnackBarSuccessMessage(responseAddLabCharges?.data?.message);\n      handleClickSnackbarSuccess();\n      handleCloseUpdateModal();\n    } else if (responseAddLabCharges.isError) {\n      setSnackBarSuccessWarning(responseAddLabCharges?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [responseAddLabCharges.isSuccess, responseAddLabCharges.isError]);\n\n  // Ipd Patient Balance Details\n\n  const [ipdPatientCurrentBalance, setIpdPatientCurrentBalance] =\n    React.useState(null);\n\n  // const [ipdPatientTotalDeposit, setIpdPatientTotalDeposit] =\n  //   React.useState(null);\n\n  // const [ipdPatientTotalExpenditure, setIpdPatientTotalExpenditure] =\n  //   React.useState(null);\n\n  // const [ipdPatientRemainingBalance, setIpdPatientRemainingBalance] =\n  //   React.useState(null);\n\n  const [ipdPatientNegativeBalanceAlert, setIpdPatientNegativeBalanceAlert] =\n    React.useState(false);\n\n  // const calculateIpdPatientBalances = () => {\n  //   if (ipdPatientCurrentBalance) {\n  //     // Calculate total deposit\n  //     const lastDeposit =\n  //       ipdPatientCurrentBalance?.data?.balance[\n  //         ipdPatientCurrentBalance?.data?.balance?.length - 1\n  //       ];\n  //     const totalDepositAmount = Number(lastDeposit?.totalBalance || 0);\n  //     setIpdPatientTotalDeposit(totalDepositAmount);\n\n  //     console.log(\"totalDepositAmount:\", totalDepositAmount);\n\n  //     // Calculate total expenditure\n  //     const totalExpenditure = Number(ipdPatientCurrentBalance?.total || 0);\n  //     setIpdPatientTotalExpenditure(totalExpenditure);\n\n  //     console.log(\"totalExpenditure:\", totalExpenditure);\n\n  //     // Calculate remaining balance\n  //     const remainingBalance = ipdPatientCurrentBalance?.remainingBalance;\n  //     setIpdPatientRemainingBalance(remainingBalance);\n  //     console.log(\"remainingBalance:\", remainingBalance);\n\n  //     // Set negative balance alert\n  //     setIpdPatientNegativeBalanceAlert(remainingBalance < 0);\n  //   }\n  // };\n  // React.useEffect(() => {\n  //   calculateIpdPatientBalances();\n  // }, [ipdPatientCurrentBalance, currentPatientBedCharges, openViewModal]);\n\n  // Discharge Function and Logic\n\n  const [ipdPatientDischargeState, setIpdPatientDischargeState] =\n    React.useState({\n      dischargeNurseRequestSent:\n        ipdPatientData?.data?.ipdPatientNurseRequestForDischarge,\n      dischargeDoctorRequestSent:\n        ipdPatientData?.data?.ipdPatientDoctorRequestForDischarge,\n\n      nurseUpdate: ipdPatientData?.data?.ipdPatientNurseConfirmation,\n      doctorUpdate: ipdPatientData?.data?.ipdPatientDoctorConfirmation,\n\n      discharged: ipdPatientData?.data?.ipdPatientDischarged,\n    });\n  const [ipdPatientDischargeReq, responseIpdPatientDischargeReq] =\n    useIpdPatientDischargeRequestMutation();\n\n  React.useEffect(() => {\n    if (responseIpdPatientDischargeReq.isSuccess) {\n      dispatch(createIpdPatientChange(Math.random()));\n      updateIpdPatientDischargeState({\n        dischargeNurseRequestSent: true,\n        dischargeDoctorRequestSent: true,\n      });\n      setSnackBarSuccessMessage(responseIpdPatientDischargeReq?.data?.message);\n      handleClickSnackbarSuccess();\n    } else if (responseIpdPatientDischargeReq.isError) {\n      setSnackBarSuccessWarning(responseIpdPatientDischargeReq?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [\n    responseIpdPatientDischargeReq.isSuccess,\n    responseIpdPatientDischargeReq.isError,\n  ]);\n\n  const updateIpdPatientDischargeState = (updatedState) => {\n    setIpdPatientDischargeState((prevState) => ({\n      ...prevState,\n      ...updatedState,\n    }));\n  };\n\n  React.useEffect(() => {\n    updateIpdPatientDischargeState({\n      dischargeNurseRequestSent:\n        ipdPatientData?.data?.ipdPatientNurseRequestForDischarge,\n      dischargeDoctorRequestSent:\n        ipdPatientData?.data?.ipdPatientDoctorRequestForDischarge,\n\n      nurseUpdate: ipdPatientData?.data?.ipdPatientNurseConfirmation,\n      doctorUpdate: ipdPatientData?.data?.ipdPatientDoctorConfirmation,\n\n      discharged: ipdPatientData?.data?.ipdPatientDischarged,\n    });\n  }, [ipdPatientData]);\n\n  const handleDischargeButtonClick = (e) => {\n    e.preventDefault();\n    ipdPatientDischargeReq(ipdPatientData?.data?.mainId);\n\n    ipdPatientDischargeLoaderToggle();\n    // updateIpdPatientDischargeState({ dischargeRequestSent: true });\n  };\n\n  const [ipdPatientDischargeLoader, setIpdPatientDischargeLoader] =\n    React.useState(false);\n\n  const ipdPatientDischargeLoaderToggle = () => {\n    setIpdPatientDischargeLoader(true);\n\n    setTimeout(() => {\n      setIpdPatientDischargeLoader(false);\n    }, 2000);\n  };\n\n  console.log(\"ipdPatientDischargeState:\", ipdPatientDischargeState);\n\n  // Final Discharge\n\n  const [ipdPatientFinalDischargeReq, responseIpdPatientFinalDischargeReq] =\n    useIpdPatientFinalDischargeByIdMutation();\n\n  const handleFinalIpdDischarge = () => {\n    ipdPatientFinalDischargeReq(ipdPatientData.data.mainId);\n    ipdPatientDischargeLoaderToggle();\n  };\n\n  React.useEffect(() => {\n    if (responseIpdPatientFinalDischargeReq.isSuccess) {\n      dispatch(createIpdPatientChange(Math.random()));\n      updateIpdPatientDischargeState({\n        discharged: true,\n      });\n\n      console.log(\n        \"Ipd Patient Discharge successful:\",\n        responseIpdPatientFinalDischargeReq\n      );\n\n      setSnackBarSuccessMessage(\n        responseIpdPatientFinalDischargeReq?.data?.message\n      );\n      handleClickSnackbarSuccess();\n    } else if (responseIpdPatientFinalDischargeReq.isError) {\n      setSnackBarSuccessWarning(\n        responseIpdPatientFinalDischargeReq?.error?.data\n      );\n      handleClickSnackbarWarning();\n    }\n  }, [\n    responseIpdPatientFinalDischargeReq.isSuccess,\n    responseIpdPatientFinalDischargeReq.isError,\n  ]);\n\n  // Balance deposits state and logic\n\n  const [ipdPatientDeposits, setIpdPatientDeposits] = React.useState(null);\n\n  const [selectedPayment, setSelectedPayment] = React.useState(null);\n  const [depositErrorMessage, setDepositErrorMessage] = React.useState(\"\");\n\n  const responseGetIpdPatientDeposits = useGetIPDPatientBalanceByIdQuery(\n    ipdPatientData?.data?.mainId\n  );\n\n  const handleIpdDepositsRefetch = async () => {\n    const responseGetIpdDepositsRefetch =\n      await responseGetIpdPatientDeposits.refetch();\n\n    console.log(\n      \"responseGetIpdDepositsRefetch:\",\n      responseGetIpdDepositsRefetch\n    );\n\n    setIpdPatientDeposits(responseGetIpdDepositsRefetch?.data?.data?.balance);\n  };\n\n  React.useEffect(() => {\n    handleIpdDepositsRefetch();\n  }, [ipdPatientData?.data?.mainId]);\n\n  // React.useEffect(() => {\n  //   setIpdPatientDeposits(\n  //     responseGetIpdPatientDeposits?.currentData?.data?.balance\n  //   );\n  // }, [responseGetIpdPatientDeposits?.isSuccess]);\n\n  console.log(\"ipdPatientDeposits:\", ipdPatientDeposits);\n\n  console.log(\"selectedPayment:\", selectedPayment);\n\n  const renderedPaymentsForDropdown = ipdPatientDeposits?.map((payment) => {\n    return {\n      value: payment.createdAt,\n      label: `${new Date(payment.createdAt).toLocaleString()} / ${\n        payment.addedBalance\n      }`,\n    };\n  });\n\n  const handlePaymentReceiptDownloadClick = (e) => {\n    if (!selectedPayment) {\n      e.preventDefault();\n      setDepositErrorMessage(\"Please select a payment\");\n    }\n  };\n\n  // console.log(\"responseGetIpdPatientDeposits:\", responseGetIpdPatientDeposits);\n\n  // const bedData = [\n  //   // Floor 1\n  //   { bdId: \"1\", floorNo: 1, bedType: \"pvt\", availability: false },\n  //   { bdId: \"2\", floorNo: 1, bedType: \"dlx\", availability: true },\n  //   { bdId: \"3\", floorNo: 1, bedType: \"sem\", availability: true },\n  //   { bdId: \"4\", floorNo: 1, bedType: \"gen\", availability: false },\n  //   { bdId: \"5\", floorNo: 1, bedType: \"pvt\", availability: true },\n  //   { bdId: \"6\", floorNo: 1, bedType: \"sem\", availability: false },\n  //   { bdId: \"7\", floorNo: 1, bedType: \"dlx\", availability: true },\n  //   { bdId: \"8\", floorNo: 1, bedType: \"gen\", availability: false },\n  //   { bdId: \"9\", floorNo: 1, bedType: \"pvt\", availability: false },\n  //   { bdId: \"10\", floorNo: 1, bedType: \"sem\", availability: true },\n  //   { bdId: \"11\", floorNo: 1, bedType: \"dlx\", availability: true },\n  //   { bdId: \"12\", floorNo: 1, bedType: \"gen\", availability: true },\n  //   { bdId: \"13\", floorNo: 1, bedType: \"pvt\", availability: false },\n  //   { bdId: \"14\", floorNo: 1, bedType: \"sem\", availability: true },\n  //   { bdId: \"15\", floorNo: 1, bedType: \"dlx\", availability: false },\n  //   { bdId: \"16\", floorNo: 1, bedType: \"gen\", availability: true },\n  //   { bdId: \"17\", floorNo: 1, bedType: \"pvt\", availability: true },\n  //   { bdId: \"18\", floorNo: 1, bedType: \"sem\", availability: true },\n  //   { bdId: \"19\", floorNo: 1, bedType: \"dlx\", availability: false },\n  //   { bdId: \"20\", floorNo: 1, bedType: \"gen\", availability: false },\n\n  //   // Floor 2\n  //   { bdId: \"21\", floorNo: 2, bedType: \"pvt\", availability: false },\n  //   { bdId: \"22\", floorNo: 2, bedType: \"dlx\", availability: true },\n  //   { bdId: \"23\", floorNo: 2, bedType: \"sem\", availability: true },\n  //   { bdId: \"24\", floorNo: 2, bedType: \"gen\", availability: false },\n  //   { bdId: \"25\", floorNo: 2, bedType: \"pvt\", availability: true },\n  //   { bdId: \"26\", floorNo: 2, bedType: \"sem\", availability: false },\n  //   { bdId: \"27\", floorNo: 2, bedType: \"dlx\", availability: true },\n  //   { bdId: \"28\", floorNo: 2, bedType: \"gen\", availability: false },\n  //   { bdId: \"29\", floorNo: 2, bedType: \"pvt\", availability: false },\n  //   { bdId: \"30\", floorNo: 2, bedType: \"sem\", availability: true },\n  //   { bdId: \"31\", floorNo: 2, bedType: \"dlx\", availability: true },\n  //   { bdId: \"32\", floorNo: 2, bedType: \"gen\", availability: true },\n  //   { bdId: \"33\", floorNo: 2, bedType: \"pvt\", availability: false },\n  //   { bdId: \"34\", floorNo: 2, bedType: \"sem\", availability: true },\n  //   { bdId: \"35\", floorNo: 2, bedType: \"dlx\", availability: false },\n  //   { bdId: \"36\", floorNo: 2, bedType: \"gen\", availability: true },\n  //   { bdId: \"37\", floorNo: 2, bedType: \"pvt\", availability: true },\n  //   { bdId: \"38\", floorNo: 2, bedType: \"sem\", availability: true },\n  //   { bdId: \"39\", floorNo: 2, bedType: \"dlx\", availability: false },\n  //   { bdId: \"40\", floorNo: 2, bedType: \"gen\", availability: false },\n\n  //   // Floor 3\n  //   { bdId: \"41\", floorNo: 3, bedType: \"pvt\", availability: false },\n  //   { bdId: \"42\", floorNo: 3, bedType: \"dlx\", availability: true },\n  //   { bdId: \"43\", floorNo: 3, bedType: \"sem\", availability: true },\n  //   { bdId: \"44\", floorNo: 3, bedType: \"gen\", availability: false },\n  //   { bdId: \"45\", floorNo: 3, bedType: \"pvt\", availability: true },\n  //   { bdId: \"46\", floorNo: 3, bedType: \"sem\", availability: false },\n  //   { bdId: \"47\", floorNo: 3, bedType: \"dlx\", availability: true },\n  //   { bdId: \"48\", floorNo: 3, bedType: \"gen\", availability: false },\n  //   { bdId: \"49\", floorNo: 3, bedType: \"pvt\", availability: false },\n  //   { bdId: \"50\", floorNo: 3, bedType: \"sem\", availability: true },\n  //   { bdId: \"51\", floorNo: 3, bedType: \"dlx\", availability: true },\n  //   { bdId: \"52\", floorNo: 3, bedType: \"gen\", availability: true },\n  //   { bdId: \"53\", floorNo: 3, bedType: \"pvt\", availability: false },\n  //   { bdId: \"54\", floorNo: 3, bedType: \"sem\", availability: true },\n  //   { bdId: \"55\", floorNo: 3, bedType: \"dlx\", availability: false },\n  //   { bdId: \"56\", floorNo: 3, bedType: \"gen\", availability: true },\n  //   { bdId: \"57\", floorNo: 3, bedType: \"pvt\", availability: true },\n  //   { bdId: \"58\", floorNo: 3, bedType: \"sem\", availability: true },\n  //   { bdId: \"59\", floorNo: 3, bedType: \"dlx\", availability: false },\n  //   { bdId: \"60\", floorNo: 3, bedType: \"gen\", availability: false },\n\n  //   // Floor 4\n  //   { bdId: \"61\", floorNo: 4, bedType: \"pvt\", availability: false },\n  //   { bdId: \"62\", floorNo: 4, bedType: \"dlx\", availability: true },\n  //   { bdId: \"63\", floorNo: 4, bedType: \"sem\", availability: true },\n  //   { bdId: \"64\", floorNo: 4, bedType: \"gen\", availability: false },\n  //   { bdId: \"65\", floorNo: 4, bedType: \"pvt\", availability: true },\n  //   { bdId: \"66\", floorNo: 4, bedType: \"sem\", availability: false },\n  //   { bdId: \"67\", floorNo: 4, bedType: \"dlx\", availability: true },\n  //   { bdId: \"68\", floorNo: 4, bedType: \"gen\", availability: false },\n  //   { bdId: \"69\", floorNo: 4, bedType: \"pvt\", availability: false },\n  //   { bdId: \"70\", floorNo: 4, bedType: \"sem\", availability: true },\n  //   { bdId: \"71\", floorNo: 4, bedType: \"dlx\", availability: true },\n  //   { bdId: \"72\", floorNo: 4, bedType: \"gen\", availability: true },\n  //   { bdId: \"73\", floorNo: 4, bedType: \"pvt\", availability: false },\n  //   { bdId: \"74\", floorNo: 4, bedType: \"sem\", availability: true },\n  //   { bdId: \"75\", floorNo: 4, bedType: \"dlx\", availability: false },\n  //   { bdId: \"76\", floorNo: 4, bedType: \"gen\", availability: true },\n  //   { bdId: \"77\", floorNo: 4, bedType: \"pvt\", availability: true },\n  //   { bdId: \"78\", floorNo: 4, bedType: \"sem\", availability: true },\n  //   { bdId: \"79\", floorNo: 4, bedType: \"dlx\", availability: false },\n  //   { bdId: \"80\", floorNo: 4, bedType: \"gen\", availability: false },\n  // ];\n\n  // -----------------------------------------------------------\n\n  const date = (dateTime) => {\n    const newdate = new Date(dateTime);\n\n    return newdate.toLocaleDateString();\n  };\n\n  const time = (dateTime) => {\n    const newDate = new Date(dateTime);\n\n    return newDate.toLocaleTimeString();\n  };\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"90%\",\n    height: \"90%\",\n    bgcolor: \"background.paper\",\n    borderRadius: \"12px\",\n    border: \"none\",\n    outline: \"none\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  // Add IPD Patient\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const renderedPatientIDForDropdown = patients?.map((data) => {\n    return {\n      value: data.patientId,\n      label: `${data.patientId} / ${data.patientName}`,\n    };\n  });\n\n  const renderedCaseIDForDropdown = ipdPatients?.map((data) => {\n    return {\n      value: data.mainId,\n      label: data.mainId,\n    };\n  });\n\n  const renderedIPDIDForDropdown = ipdPatients?.map((data) => {\n    return {\n      value: data.mainId,\n      label: data.mainId,\n    };\n  });\n\n  const renderedDoctorIDForDropdown = doctors?.map((data) => {\n    return {\n      value: data.doctorId,\n      label: `${data.doctorId} / ${data.doctorName}`,\n    };\n  });\n\n  const renderedNursesIDForDropdown = nurses?.map((data) => {\n    return {\n      value: data.nurseId,\n      label: `${data.nurseId} / ${data.nurseName}`,\n    };\n  });\n\n  const renderedBedTypeForDropdown = doctors?.map((data) => {\n    return {\n      value: data.doctorId,\n      label: `${data.doctorId} / ${data.doctorName}`,\n    };\n  });\n\n  const renderedBedForDropdown = doctors?.map((data) => {\n    return {\n      value: data.doctorId,\n      label: `${data.doctorId} / ${data.doctorName}`,\n    };\n  });\n\n  React.useEffect(() => {\n    if (submitButton === \"add\") {\n      if (responseCreateIPDPatient.isSuccess) {\n        dispatch(createIpdPatientChange(Math.random()));\n        setSnackBarSuccessMessage(responseCreateIPDPatient?.data?.message);\n        handleClickSnackbarSuccess();\n        setIpdPatientId({ value: \"\", label: \"\" });\n\n        setIpdDoctorId({ value: \"\", label: \"\" });\n        setIpdNurseId({ value: \"\", label: \"\" });\n        setIpdDespositAmount();\n        setIpdPaymentMode(\"UPI\");\n        setIpdWardNo();\n        setIpdFloorNo();\n\n        setIpdRoomNo();\n        setIpdBedNo();\n        setIpdPatientNotes();\n\n        setIpdAddBalanceNote(\"\");\n\n        handleClose();\n      }\n      if (submitButton === \"addPrint\") {\n        navigate(\n          `${\n            browserLinks.nurse.category\n          }/${browserLinks.nurse.internalPages.ipdPatientList\n            .split(\" \")\n            .join(\"\")}/${responseCreateIPDPatient?.data?.data?.mainId}`\n        );\n      }\n    } else if (responseCreateIPDPatient.isError) {\n      setSnackBarSuccessWarning(responseCreateIPDPatient?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [responseCreateIPDPatient.isSuccess, responseCreateIPDPatient.isError]);\n\n  const handleAddIPDPatient = (e) => {\n    e.preventDefault();\n\n    // const submitData = {\n    //   ipdPatientId: ipdPatientId?.value,\n    //   ipdCaseId: ipdCaseId?.value,\n    //   ipdDoctorId: ipdDoctorId?.value,\n    //   ipdId: ipdId?.value,\n    //   ipdPatientBedType: ipdPatientBedType?.value,\n    //   ipdPatientBed: ipdPatientBed?.value,\n    //   ipdBillStatus: ipdBillStatus?.value,\n    //   ipdPatientBloodPressure: ipdPatientBloodPressure,\n    //   ipdPatientNotes: ipdPatientNotes,\n    // };\n    const submitData = {\n      ipdPatientId: ipdPatientId?.value,\n      ipdDoctorId: ipdDoctorId?.value,\n      ipdNurseId: ipdNurseId?.value,\n      ipdDepositAmount: ipdDepositAmount,\n      ipdPaymentMode: ipdPaymentMode,\n\n      balanceNote: ipdAddBalanceNote,\n      // ipdWardNo: ipdWardNo,\n      ipdFloorNo: selectedBed?.bedFloor,\n      // ipdRoomNo: ipdRoomNo,\n      ipdBedNo: selectedBed?.bedId,\n      ipdPatientNotes: ipdPatientNotes,\n    };\n\n    const bedAvailabilityData = {\n      bedId: selectedBed.bedId,\n      data: { bedAvailableOrNot: false },\n    };\n\n    updateBedAvailability(bedAvailabilityData);\n\n    // console.log(submitData);\n\n    createIPDPatient(submitData);\n  };\n\n  // console.log(responseUpdateBedAvailability);\n\n  const modalAddIPDPatient = (\n    <div className=\"flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]\">\n      <h2 className=\"border-b py-[1rem]\">Add Patient</h2>\n      <form className=\"flex flex-col gap-[1rem]\" onSubmit={handleAddIPDPatient}>\n        <div className=\"grid grid-cols-3 gap-[2rem] border-b pb-[3rem]\">\n          <div className=\"flex flex-col gap-[6px] relative w-full\">\n            <label className=\"text-[14px]\">UHID *</label>\n            <Select\n              required\n              options={renderedPatientIDForDropdown}\n              onChange={setIpdPatientId}\n            />\n          </div>\n\n          <div className=\"flex flex-col gap-[6px] relative w-full\">\n            <label className=\"text-[14px]\">Doctor Id *</label>\n            <Select\n              required\n              options={renderedDoctorIDForDropdown}\n              onChange={setIpdDoctorId}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px] relative w-full\">\n            <label className=\"text-[14px]\">Nurse Id *</label>\n            <Select\n              required\n              options={renderedNursesIDForDropdown}\n              onChange={setIpdNurseId}\n            />\n          </div>\n\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Deposit Amount *</label>\n\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter deposit amount\"\n              value={ipdDepositAmount}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdDespositAmount(value);\n              }}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Payment Mode *</label>\n            <select\n              required\n              className=\"py-[10px] outline-none border-b bg-transparent\"\n              value={ipdPaymentMode}\n              onChange={(e) => setIpdPaymentMode(e.target.value)}\n            >\n              <option>UPI</option>\n              <option>Cash</option>\n              <option>Cheque</option>\n              <option>Card</option>\n            </select>\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Deposit Note</label>\n            <textarea\n              className=\"border-b py-[10px] outline-none\"\n              placeholder=\"Enter notes\"\n              rows={1}\n              value={ipdAddBalanceNote}\n              onChange={(e) => setIpdAddBalanceNote(e.target.value)}\n            />\n          </div>\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Ward No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter ward no\"\n              value={ipdWardNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdWardNo(value);\n              }}\n            />\n          </div> */}\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Floor No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter floor no\"\n              value={ipdFloorNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdFloorNo(value);\n              }}\n            />\n          </div> */}\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Room No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter room no\"\n              value={ipdRoomNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdRoomNo(value);\n              }}\n            />\n          </div> */}\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Bed No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter bed no\"\n              value={ipdBedNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdBedNo(value);\n              }}\n            />\n          </div> */}\n        </div>\n        {/* // Add Bed */}\n        <div>\n          {addBedFormOpen === false ? (\n            <button\n              onClick={(e) => handleAddBedFormOpen(e)}\n              className=\" flex justify-center items-start w-[100px] gap-1 bg-green-500 py-1 text-white\n             hover:text-black rounded-md \"\n            >\n              <FaBed className=\" text-3xl \" /> +\n            </button>\n          ) : (\n            <div className=\" flex flex-col justify-center items-start gap-5\">\n              <h2>Select A Bed</h2>\n              <div>\n                <BedSelector beds={beds} handleBedSelect={handleBedSelect} />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex flex-col gap-[6px]\">\n          <label className=\"text-[14px]\">Notes</label>\n          <textarea\n            className=\"border-b py-[10px] outline-none\"\n            placeholder=\"Enter notes\"\n            rows={3}\n            value={ipdPatientNotes}\n            onChange={(e) => setIpdPatientNotes(e.target.value)}\n          />\n        </div>\n        <div className=\"flex gap-[1rem] items-center\">\n          <button\n            type=\"submit\"\n            className=\"buttonFilled\"\n            onClick={() => setSubmitButton(\"add\")}\n          >{`Save >`}</button>\n          <button\n            className=\"buttonOutlined\"\n            onClick={() => setSubmitButton(\"addPrint\")}\n          >{`Save & Print >`}</button>\n        </div>\n      </form>\n    </div>\n  );\n  // --------------------------------------------\n\n  // Update Modal\n  const [openUpdateModal, setOpenUpdateModal] = React.useState(false);\n  const handleOpenUpdateModal = (data) => {\n    // console.log(\"data in update modal:\", data);\n    const currentBedId = data.data.ipdBedNo;\n    const currentBedData = beds.find((bed) => bed.bedId === currentBedId);\n\n    setPreviousBed(currentBedData);\n\n    setMainId(data?.data?.mainId);\n    setIpdPatientId({\n      value: data?.data?.ipdPatientId,\n      label: data?.data?.ipdPatientId,\n    });\n\n    setIpdDoctorId({\n      value: data?.data?.ipdDoctorId,\n      label: data?.data?.ipdDoctorId,\n    });\n    setIpdDespositAmount(data?.data?.ipdDepositAmount);\n    setIpdPaymentMode(data?.data?.ipdPaymentMode);\n    setIpdWardNo(data?.data?.ipdWardNo);\n    setIpdFloorNo(data?.data?.ipdFloorNo);\n\n    setIpdRoomNo(data?.data?.ipdBedNo);\n    setIpdBedNo(data?.data?.ipdBedNo);\n    setIpdPatientNotes(data?.data?.ipdPatientNotes);\n    setOpenUpdateModal(true);\n  };\n  const handleCloseUpdateModal = () => {\n    // setMainId(\"\");\n    // setIpdPatientId({ value: \"\", label: \"\" });\n    // setIpdCaseId({ value: \"\", label: \"\" });\n    // setIpdId({ value: \"\", label: \"\" });\n    // setIpdDoctorId({ value: \"\", label: \"\" });\n    // setIpdPatientBedType({ value: \"\", label: \"\" });\n    // setIpdPatientBed({ value: \"\", label: \"\" });\n    // setIpdBillStatus({ value: \"\", label: \"\" });\n    // setIpdPatientBloodPressure(\"\");\n    // setIpdPatientNotes(\"\");\n    // setOpenUpdateModal(false);\n    setMainId(\"\");\n    setIpdPatientId({ value: \"\", label: \"\" });\n\n    setIpdDoctorId({ value: \"\", label: \"\" });\n    setIpdDespositAmount();\n    setIpdPaymentMode(\"UPI\");\n    setIpdWardNo();\n    setIpdFloorNo();\n\n    setIpdRoomNo();\n    setIpdBedNo();\n    setIpdPatientNotes();\n    setOpenUpdateModal(false);\n  };\n\n  React.useEffect(() => {\n    if (responseUpdateIPDPatientById.isSuccess) {\n      dispatch(updateIpdPatientChange(Math.random()));\n      setPreviousBed(null);\n      setUpdatedBed(null);\n\n      setSnackBarSuccessMessage(responseUpdateIPDPatientById?.data?.message);\n      handleClickSnackbarSuccess();\n      handleCloseUpdateModal();\n    } else if (responseUpdateIPDPatientById.isError) {\n      setSnackBarSuccessWarning(responseUpdateIPDPatientById?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [\n    responseUpdateIPDPatientById.isSuccess,\n    responseUpdateIPDPatientById.isError,\n  ]);\n\n  const handleUpdateIPDPatient = (e) => {\n    e.preventDefault();\n\n    const submitData = {\n      ipdPatientId: ipdPatientId?.value,\n      ipdDoctorId: ipdDoctorId?.value,\n      ipdDepositAmount: ipdDepositAmount,\n      ipdPaymentMode: ipdPaymentMode,\n      // ipdWardNo: ipdWardNo,\n      ipdFloorNo: updatedBed?.bedFloor,\n      // ipdRoomNo: ipdRoomNo,\n      ipdBedNo: updatedBed?.bedId,\n      ipdPatientNotes: ipdPatientNotes,\n    };\n\n    const updateData = {\n      id: mainId,\n      data: submitData,\n    };\n\n    updateIPDPatientById(updateData);\n\n    if (updatedBed) {\n      if (updatedBed?.bedId !== previousBed.bedId) {\n        handleIpdPatientBedUpdate();\n      }\n    }\n\n    // console.log(updateData);\n  };\n\n  // console.log(\"updatedBed:\", updatedBed);\n  // console.log(\"previousBed:\", previousBed);\n  // console.log(\"previousBed.bedId:\", previousBed?.bedId);\n\n  const handleIpdPatientBedUpdate = () => {\n    // console.log(\"inside handleBedUpdate\");\n    // console.log(\"previousBed.bedId:\", previousBed?.bedId);\n    const previousBedAvailData = {\n      bedId: previousBed.bedId,\n      data: { bedAvailableOrNot: true },\n    };\n\n    updateBedAvailability(previousBedAvailData);\n\n    const updatedBedAvailabilityData = {\n      bedId: updatedBed.bedId,\n      data: { bedAvailableOrNot: false },\n    };\n\n    updateBedAvailability(updatedBedAvailabilityData);\n  };\n\n  // console.log(\"ipdPatientData in patientTable:\", ipdPatientData);\n  const modalUpdateIPDPatient = (\n    <div className=\"flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]\">\n      <h2 className=\"border-b py-[1rem]\">Update Patient</h2>\n      <form\n        className=\"flex flex-col gap-[1rem]\"\n        onSubmit={handleUpdateIPDPatient}\n      >\n        <div className=\"grid grid-cols-3 gap-[2rem] border-b pb-[3rem]\">\n          <div className=\"flex flex-col gap-[6px] relative w-full\">\n            <label className=\"text-[14px]\">UHID *</label>\n            <Select\n              options={renderedPatientIDForDropdown}\n              onChange={setIpdPatientId}\n              defaultValue={ipdPatientId}\n            />\n          </div>\n\n          <div className=\"flex flex-col gap-[6px] relative w-full\">\n            <label className=\"text-[14px]\">Doctor ID *</label>\n            <Select\n              options={renderedDoctorIDForDropdown}\n              onChange={setIpdDoctorId}\n              defaultValue={ipdDoctorId}\n            />\n          </div>\n\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Deposit Amount *</label>\n\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter deposit amount\"\n              value={ipdDepositAmount}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdDespositAmount(value);\n              }}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Payment Mode *</label>\n            <select\n              required\n              className=\"py-[10px] outline-none border-b bg-transparent\"\n              value={ipdPaymentMode}\n              onChange={(e) => setIpdPaymentMode(e.target.value)}\n            >\n              <option>UPI</option>\n              <option>Cash</option>\n              <option>Cheque</option>\n              <option>Card</option>\n            </select>\n          </div> */}\n\n          {/* <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Ward No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter ward no\"\n              value={ipdWardNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdWardNo(value);\n              }}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Floor No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter floor no\"\n              value={ipdFloorNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdFloorNo(value);\n              }}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Room No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter room no\"\n              value={ipdRoomNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdRoomNo(value);\n              }}\n            />\n          </div>\n          <div className=\"flex flex-col gap-[6px]\">\n            <label className=\"text-[14px]\">Bed No. *</label>\n            <input\n              className=\"py-[10px] outline-none border-b\"\n              required\n              placeholder=\"Enter bed no\"\n              value={ipdBedNo}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, \"\");\n                setIpdBedNo(value);\n              }}\n            />\n          </div> */}\n        </div>\n        <BedSelector\n          beds={beds}\n          handleBedSelect={handleUpdatedBedSelect}\n          ipdPtientEdit={true}\n        />\n\n        <div className=\"flex flex-col gap-[6px]\">\n          <label className=\"text-[14px]\">Notes</label>\n          <textarea\n            className=\"border-b py-[10px] outline-none\"\n            placeholder=\"Enter notes\"\n            rows={3}\n            value={ipdPatientNotes}\n            onChange={(e) => setIpdPatientNotes(e.target.value)}\n          />\n        </div>\n        <div className=\"flex gap-[1rem] items-center\">\n          <button\n            type=\"submit\"\n            className=\"buttonFilled\"\n            onClick={() => setSubmitButton(\"add\")}\n          >{`Save >`}</button>\n        </div>\n      </form>\n      <br />\n      <div className=\" flex flex-col justify-center items-start gap-5\">\n        <h2>Add Medical Charges </h2>\n        <AddOtherCharges\n          handleAddMedicalCharges={handleAddMedicalCharges}\n          mainId={mainId}\n        />\n        <br />\n\n        <h2>Add Lab Test Charges</h2>\n\n        <AddOtherCharges\n          handleAddMedicalCharges={handleAddLabCharges}\n          mainId={mainId}\n        />\n      </div>\n    </div>\n  );\n\n  // ---------------------------------------------------\n\n  // View Modal\n\n  const handleOpenViewModal = (data) => {\n    setIpdPatientData(data);\n    if (data?.balanceData?.remainingBalance < 0) {\n      setIpdPatientNegativeBalanceAlert(true);\n    } else {\n      setIpdPatientNegativeBalanceAlert(false);\n    }\n    // const currentPatientBed = beds.find(\n    //   (bed) => bed?.bedId === ipdPatientData?.data?.ipdBedNo\n    // );\n\n    // setCurrentPatientBed(currentPatientBed);\n    setOpenViewModal(true);\n  };\n  React.useEffect(() => {\n    const currentPatientBed = beds.find(\n      (bed) => bed?.bedId === ipdPatientData?.data?.ipdBedNo\n    );\n\n    setCurrentPatientBed(currentPatientBed);\n  }, [handleOpenViewModal]);\n\n  // console.log(opdPatientData);\n  const handleCloseViewModal = () => {\n    setOpenViewModal(false);\n\n    setIpdPatientDeposits(null);\n    setSelectedPayment(null);\n  };\n\n  // console.log(\"currentPatientBed:\", currentPatientBed);\n\n  // console.log(\"ipdPatientCurrentBalance:\", ipdPatientCurrentBalance);\n\n  const modalViewPatientDetails = (\n    <div className=\"flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]\">\n      <div className=\"border-b flex gap-[1rem] py-[1rem] w-full\">\n        <h3 className=\"font-[500]\">ID: </h3>\n        <h3>{ipdPatientData?.data?.mainId}</h3>\n      </div>\n      <div className=\" flex justify-center items-center\">\n        <div className=\"border-b flex gap-[1rem] py-[1rem] w-full\">\n          <h3 className=\"font-[500]\">Total Deposit: </h3>\n          <h3>\n            Rs.\n            {ipdPatientData?.balanceData?.totalAddedBalance\n              ? ipdPatientData?.balanceData?.totalAddedBalance\n              : \"Not Found\"}\n          </h3>\n        </div>\n        <div className=\"border-b flex gap-[1rem] py-[1rem] w-full\">\n          <h3 className=\"font-[500]\">Total Expense: </h3>\n          <h3>\n            Rs.\n            {ipdPatientData?.balanceData?.finalTotal\n              ? ipdPatientData?.balanceData?.finalTotal\n              : \"Not Found\"}\n          </h3>\n        </div>\n        <div\n          className={`border-b flex gap-[1rem] py-[1rem] w-full ${\n            ipdPatientNegativeBalanceAlert ? \"text-red-500\" : \"\"\n          }`}\n        >\n          <h3 className=\"font-[500]\">Remaining Balance: </h3>\n          <h3>\n            Rs.\n            {ipdPatientData?.balanceData?.remainingBalance\n              ? ipdPatientData?.balanceData?.remainingBalance\n              : \"Not Found\"}\n          </h3>\n        </div>\n      </div>\n\n      <div className=\"flex w-full\">\n        <div className=\"w-[25%] flex flex-col items-center\">\n          <img\n            className=\"w-[200px] h-[200px] object-contain\"\n            src={\n              ipdPatientData?.patientData?.patientImage\n                ? process.env.React_App_Base_Image_Url +\n                  ipdPatientData?.patientData?.patientImage\n                : placeholder\n            }\n            alt=\"patientImage\"\n          />\n          {/* <button className=\"buttonFilled w-fit\">Button</button> */}\n        </div>\n        <div className=\"w-[75%] flex flex-col gap-[10px] text-[14px]\">\n          <div className=\"grid grid-cols-2 gap-[10px]\">\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Id: </p>\n              <p>{ipdPatientData?.data?.ipdPatientId}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Doctor Id: </p>\n              <p>{ipdPatientData?.data?.ipdDoctorId}</p>\n            </div>\n\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Name: </p>\n              <p>{ipdPatientData?.patientData?.patientName}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Doctor Name: </p>\n              <p>{ipdPatientData?.doctorData?.doctorName}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Blood Group: </p>\n              <p>{ipdPatientData?.patientData?.patientBloodGroup}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Doctor Phone: </p>\n              <p>{ipdPatientData?.doctorData?.doctorPhone}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Gender: </p>\n              <p>{ipdPatientData?.patientData?.patientGender}</p>\n            </div>\n            {/* <div className='flex'>\n              <p className='font-[600] w-[150px]'>Case No: </p>\n              <p>{ipdPatientData?.data?.ipdCaseId}</p>\n            </div> */}\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient DOB: </p>\n              <p>{ipdPatientData?.patientData?.patientDateOfBirth}</p>\n            </div>\n            {/* <div className='flex'>\n              <p className='font-[600] w-[150px]'>OPD No: </p>\n              <p>{ipdPatientData?.data?.ipdId}</p>\n            </div> */}\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Phone: </p>\n              <p>{ipdPatientData?.patientData?.patientPhone}</p>\n            </div>\n            {/* <div className='flex'>\n              <p className='font-[600] w-[150px]'>Blood Pressure: </p>\n              <p>{ipdPatientData?.data?.ipdPatientBloodPressure}</p>\n            </div> */}\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Bed No: </p>\n              <p>{currentPatientBed?.bedNumber}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Bed Floor: </p>\n              <p>{currentPatientBed?.bedFloor}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Height: </p>\n              <p>{ipdPatientData?.patientData?.patientHeight}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Bill Status: </p>\n              <p>\n                {ipdPatientData?.data?.ipdBillStatus === true\n                  ? \"Paid\"\n                  : \"Unpaid\"}\n              </p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Patient Weight: </p>\n              <p>{ipdPatientData?.patientData?.patientWeight}</p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Bed: </p>\n              <p>{ipdPatientData?.data?.ipdPatientBed}</p>\n            </div>\n          </div>\n          <div className=\"flex flex-col gap-[10px]\">\n            <div className=\"flex flex-col\">\n              <p className=\"font-[600] w-[150px]\">Notes: </p>\n              <p className=\"text-[14px]\">\n                {ipdPatientData?.data?.ipdPatientNotes}\n              </p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Created On: </p>\n              <p className=\"break-word text-[14px]\">\n                {`${date(ipdPatientData?.data?.createdAt)} ${time(\n                  ipdPatientData?.data?.createdAt\n                )}`}\n              </p>\n            </div>\n            <div className=\"flex\">\n              <p className=\"font-[600] w-[150px]\">Updated On: </p>\n              <p className=\"break-word text-[14px]\">\n                {`${date(ipdPatientData?.data?.updatedAt)} ${time(\n                  ipdPatientData?.data?.updatedAt\n                )}`}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <IpdChargesShowcase\n        currentPatientBed={currentPatientBed}\n        ipdPatientData={ipdPatientData}\n        setIpdPatientCurrentBalance={setIpdPatientCurrentBalance}\n        setCurrentPatientBedCharges={setCurrentPatientBedCharges}\n        openViewModal={openViewModal}\n      />\n    </div>\n  );\n  // ---------------\n  console.log(ipdPatientData);\n  const [search, setSearch] = React.useState(\"\");\n\n  const apiBaseUrl = process.env.React_App_Base_url;\n\n  const [ipdPatientsFinalBalance, setIpdPatientsFinalBalance] =\n    React.useState(null);\n\n  const handleIpdPatientsFinalBalanceCall = async () => {\n    try {\n      const response = await axios.get(\n        `${apiBaseUrl}IPDPatient-Balance-GET-ALL`\n      );\n      // console.log(response);\n\n      if (response?.request?.status === 200) {\n        setIpdPatientsFinalBalance(response.data.balanceCalculation);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // console.log(\"ipdPatientsFinalBalance:\", ipdPatientsFinalBalance);\n\n  React.useEffect(() => {\n    handleIpdPatientsFinalBalanceCall();\n  }, []);\n\n  const filteredArray = ipdPatients?.filter((data) => {\n    if (search !== \"\") {\n      const userSearch = search.toLowerCase();\n      const searchInData = data?.mainId?.toLowerCase();\n\n      return searchInData?.startsWith(userSearch);\n    }\n    return data;\n  });\n\n  const mappedBillData = filteredArray?.map((data, index) => {\n    const filteredPatientData = patients?.find(\n      (patient) => data?.ipdPatientId === patient?.patientId\n    );\n    const filteredDoctorData = doctors?.find(\n      (doctor) => doctor?.doctorId === data?.ipdDoctorId\n    );\n\n    // console.log(\"data inside mappedBilledData:\", data);\n\n    const filteredFinalBalance = ipdPatientsFinalBalance?.find(\n      (balance) => balance.ipdPatientRegId === data.mainId\n    );\n    return {\n      data,\n      patientData: filteredPatientData,\n      doctorData: filteredDoctorData,\n      balanceData: filteredFinalBalance,\n    };\n  });\n\n  console.log(\"mappedBillData:\", mappedBillData);\n\n  // Add balance Modal Funtiontionality\n\n  const handleAddBalanceModalOpen = (list) => {\n    const currentIpdPatientMainId = list.data.mainId;\n    updateIpdBalanceState({ ipdPatientMainId: currentIpdPatientMainId });\n\n    setOpenAddBalanceModal(true);\n  };\n\n  const handleAddBalanceModalClose = () => {\n    setOpenAddBalanceModal(false);\n\n    setIpdDespositAmount(0);\n\n    updateIpdBalanceState({\n      ipdPatientMainId: null,\n    });\n  };\n\n  const handleAddBalanceFormSubmit = (e) => {\n    e.preventDefault();\n\n    const updateData = {\n      ipdPatientMainId: ipdAddBalanceData.ipdPatientMainId,\n      data: {\n        ipdAddedAmount: Number(ipdDepositAmount),\n        ipdPaymentMode: ipdPaymentMode,\n        balanceNote: ipdAddBalanceNote,\n      },\n    };\n\n    console.log(\"updatedData:\", updateData);\n\n    addIpdPatientBalance(updateData);\n  };\n\n  React.useEffect(() => {\n    if (responeAddIpdPatientBalance.isSuccess) {\n      dispatch(updateIpdPatientChange(Math.random()));\n      updateIpdBalanceState({\n        ipdPatientMainId: null,\n      });\n\n      setSnackBarSuccessMessage(responeAddIpdPatientBalance?.data?.message);\n      handleClickSnackbarSuccess();\n      handleAddBalanceModalClose();\n    } else if (responeAddIpdPatientBalance.isError) {\n      setSnackBarSuccessWarning(responeAddIpdPatientBalance?.error?.data);\n      handleClickSnackbarWarning();\n    }\n  }, [\n    responeAddIpdPatientBalance.isSuccess,\n    responeAddIpdPatientBalance.isError,\n  ]);\n\n  //////////////\n\n  const config = [\n    {\n      label: \"Reg No.\",\n      render: (list) => list?.data?.mainId,\n    },\n    {\n      label: \"Patient Name\",\n      render: (list) => list?.patientData?.patientName,\n    },\n    {\n      label: \"Doctor Name\",\n      render: (list) => list?.doctorData?.doctorName,\n    },\n    {\n      label: \"Date\",\n      render: (list) => date(list?.data?.createdAt),\n    },\n    {\n      label: \"Bed\",\n      render: (list) =>\n        beds.find((bed) => bed.bedId === list?.data?.ipdBedNo)?.bedNumber,\n    },\n    {\n      label: \"Total Deposit\",\n      render: (list) => (\n        <>\n          <div className=\"\">\n            <h2\n            // className={`${\n            //   list.data.ipdDepositAmount > 5000 ? \"\" : \" text-red-500\"\n            // }`}\n            >\n              ₹ {list?.data?.ipdDepositAmount}\n            </h2>\n          </div>\n          {list?.data?.ipdPatientDischarged ? (\n            <button\n              disabled\n              className=\" bg-green-500  text-white font-semibold px-2 py-1 rounded-md\"\n            >\n              Discharged\n            </button>\n          ) : (\n            <button\n              onClick={() => handleAddBalanceModalOpen(list)}\n              className=\" bg-blue-400 hover:bg-blue-500 text-white font-semibold px-2 py-1 rounded-md\"\n            >\n              Add Balance\n            </button>\n          )}\n        </>\n      ),\n    },\n    {\n      label: \"Remaining Balance\",\n      render: (list) => (\n        <>\n          <div className=\"\">\n            <h2\n              className={`${\n                list.balanceData?.remainingBalance > 5000 ? \"\" : \" text-red-500\"\n              }`}\n            >\n              ₹ {list?.balanceData?.remainingBalance}\n            </h2>\n          </div>\n          {list.balanceData?.remainingBalance < 5000 &&\n          list.balanceData?.remainingBalance > 0 ? (\n            <button\n              disabled\n              className=\" bg-red-500 text-white font-semibold px-2 py-1 rounded-md\"\n            >\n              Low Balance\n            </button>\n          ) : list.balanceData?.remainingBalance < 0 ? (\n            <button\n              disabled\n              className=\" bg-red-500 text-white font-semibold px-2 py-1 rounded-md\"\n            >\n              Negative Balance\n            </button>\n          ) : (\n            \"\"\n          )}\n        </>\n      ),\n    },\n    // {\n    //   label: \"Remaining Balance\",\n    //   render: (list) => (\n    //     <>\n    //       <div className=\"\">\n    //         <h2\n    //         // className={`${\n    //         //   list.data.ipdDepositAmount > 5000 ? \"\" : \" text-red-500\"\n    //         // }`}\n    //         >\n    //           ₹ {list?.data?.ipdDepositAmount}\n    //         </h2>\n    //       </div>\n    //       <button\n    //         onClick={() => handleAddBalanceModalOpen(list)}\n    //         className=\" bg-blue-400 hover:bg-blue-500 text-white font-semibold px-2 py-1 rounded-md\"\n    //       >\n    //         Add Balance\n    //       </button>\n    //     </>\n    //   ),\n    // },\n    {\n      label: \"Action\",\n      render: (list) => (\n        <div className=\"flex gap-[10px] justify-center\">\n          <div\n            onClick={() => handleOpenViewModal(list)}\n            className=\"p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer\"\n          >\n            <MdViewKanban className=\"text-[25px] text-[#96999C]\" />\n          </div>\n          <div\n            onClick={() => handleOpenUpdateModal(list)}\n            className=\"p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer\"\n          >\n            <RiEdit2Fill className=\"text-[25px] text-[#3497F9]\" />\n          </div>\n          {/* <div\n            onClick={() => handleClickOpenDialogBox(list)}\n            className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\n            <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\n          </div> */}\n        </div>\n      ),\n    },\n  ];\n\n  const keyFn = (list) => {\n    return list.mainId;\n  };\n  return (\n    <Suspense fallback={<>...</>}>\n      <div className=\"flex flex-col gap-[1rem] p-[1rem]\">\n        <div className=\"flex justify-between\">\n          <h2 className=\"border-b-[4px] border-[#3497F9]\">IPD Patients</h2>\n          <button\n            onClick={handleOpen}\n            className=\"bg-[#3497F9] text-white p-[10px] rounded-md\"\n          >\n            + Add IPD Patients\n          </button>\n        </div>\n        <div className=\"flex justify-between\">\n          <div className=\"flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]\">\n            <FaSearch className=\"text-[#56585A]\" />\n            <input\n              className=\"bg-transparent outline-none\"\n              placeholder=\"Search by id\"\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          </div>\n          {/* <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\n            <input type='date' className='bg-transparent outline-none' />\n          </div> */}\n        </div>\n        <Table data={mappedBillData} config={config} keyFn={keyFn} />\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            <h1 className=\"headingBottomUnderline w-fit pb-[10px]\">\n              Add IPD Patient\n            </h1>\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {modalAddIPDPatient}\n          </Typography>\n        </Box>\n      </Modal>\n      <Modal\n        open={openUpdateModal}\n        onClose={handleCloseUpdateModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            <h1 className=\"headingBottomUnderline w-fit pb-[10px]\">\n              Update IPD Patient\n            </h1>\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {modalUpdateIPDPatient}\n          </Typography>\n        </Box>\n      </Modal>\n\n      {/* Add Balance Modal */}\n      <Modal\n        open={openAddBalanceModal}\n        onClose={handleAddBalanceModalClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"90%\",\n            height: \"40%\",\n            bgcolor: \"background.paper\",\n            borderRadius: \"12px\",\n            border: \"none\",\n            outline: \"none\",\n            boxShadow: 24,\n            p: 4,\n          }}\n        >\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            <h1 className=\"headingBottomUnderline w-fit pb-[10px]\">\n              Update IPD Patient Balance\n            </h1>\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            <form\n              className=\"flex flex-col gap-[1rem]\"\n              onSubmit={(e) => handleAddBalanceFormSubmit(e)}\n            >\n              <div className=\"grid grid-cols-3 gap-[2rem] border-b pb-[3rem]\">\n                <div className=\"flex flex-col gap-[6px]\">\n                  <label className=\"text-[14px]\">Deposit Amount *</label>\n\n                  <input\n                    className=\"py-[10px] outline-none border-b\"\n                    required\n                    placeholder=\"Enter deposit amount\"\n                    defaultValue={0}\n                    value={ipdDepositAmount}\n                    onChange={(e) => {\n                      const value = e.target.value.replace(/\\D/g, \"\");\n                      setIpdDespositAmount(value);\n                    }}\n                  />\n                </div>\n                <div className=\"flex flex-col gap-[6px]\">\n                  <label className=\"text-[14px]\">Payment Mode *</label>\n                  <select\n                    required\n                    className=\"py-[10px] outline-none border-b bg-transparent\"\n                    value={ipdPaymentMode}\n                    onChange={(e) => setIpdPaymentMode(e.target.value)}\n                  >\n                    <option>UPI</option>\n                    <option>Cash</option>\n                    <option>Cheque</option>\n                    <option>Card</option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col gap-[6px]\">\n                  <label className=\"text-[14px]\">Deposit Note</label>\n                  <textarea\n                    className=\"border-b py-[10px] outline-none\"\n                    placeholder=\"Enter notes\"\n                    rows={1}\n                    value={ipdAddBalanceNote}\n                    onChange={(e) => setIpdAddBalanceNote(e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-[1rem] items-center\">\n                <button\n                  type=\"submit\"\n                  className=\"buttonFilled\"\n                  onClick={() => setSubmitButton(\"add\")}\n                >{`Save >`}</button>\n              </div>\n            </form>\n            {/* ///// */}\n          </Typography>\n        </Box>\n      </Modal>\n\n      <Modal\n        open={openViewModal}\n        onClose={handleCloseViewModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            <div className=\"flex justify-between items-center\">\n              <h1 className=\"headingBottomUnderline w-fit pb-[10px]\">\n                IPD Patient Details\n              </h1>\n              <div className=\"flex justify-center items-end gap-5 bg-blue-50 px-3 py-2 rounded-md\">\n                <div className=\"flex flex-col gap-[6px] relative w-[300px]\">\n                  <label className=\"text-[14px]\">Previous Payments *</label>\n                  <Select\n                    required\n                    options={renderedPaymentsForDropdown}\n                    onChange={(option) => {\n                      setSelectedPayment(option.value);\n                      setDepositErrorMessage(\"\");\n                    }}\n                    className=\"text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <Link\n                    target=\"_blank\"\n                    to={`${\n                      browserLinks?.nurse.category\n                    }/${browserLinks?.nurse?.internalPages?.ipdPatientPaymentReceipt\n                      .split(\" \")\n                      .join(\"\")}/${\n                      ipdPatientData?.data?.mainId\n                    }/${selectedPayment}`}\n                    className={`buttonFilled flex items-center gap-[10px] text-sm no-underline ${\n                      !selectedPayment ? \"disabled\" : \"\"\n                    }`}\n                    onClick={handlePaymentReceiptDownloadClick}\n                  >\n                    <LuHardDriveDownload />\n                    <p>Download Payment Receipt</p>\n                  </Link>\n                  {depositErrorMessage && (\n                    <p className=\"text-red-500 text-sm mt-2\">\n                      {depositErrorMessage}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {ipdPatientDischargeLoader ? (\n                <div>Loading...</div>\n              ) : ipdPatientNegativeBalanceAlert ? (\n                <button\n                  onClick={(e) => e.preventDefault()}\n                  disabled={true}\n                  className=\" bg-red-500 text-white px-2 py-1 rounded-md\"\n                >\n                  Negative Balance\n                </button>\n              ) : ipdPatientDischargeState.discharged === true ? (\n                <div>\n                  {\" \"}\n                  <Link\n                    // onClick={handleGeneratePdf}\n                    target=\"_blank\"\n                    to={ipdPatientData?.data?.mainId}\n                    // to={`${browserLinks.superadmin.category}/${browserLinks.superadmin.internalPages.opdPatients}/${opdPatientData?.data?.mainId}`}\n                    className=\"buttonFilled flex items-center gap-[10px]\"\n                  >\n                    <LuHardDriveDownload />\n                    <p>Download</p>\n                  </Link>\n                </div>\n              ) : (\n                <>\n                  {ipdPatientDischargeState.dischargeDoctorRequestSent &&\n                  (!ipdPatientDischargeState.doctorUpdate ||\n                    !ipdPatientDischargeState.nurseUpdate) ? (\n                    <div className=\" flex flex-col justify-start items-start gap-2\">\n                      <button\n                        className=\" bg-gray-500 text-white px-2 py-1 rounded-md\"\n                        disabled\n                      >\n                        Request Pending\n                      </button>\n                      <div className=\" flex flex-col justify-center items-start text-base \">\n                        <div>\n                          Doctor's Approval:{\" \"}\n                          <span\n                            className={`${\n                              ipdPatientDischargeState.doctorUpdate\n                                ? \" text-green-500 \"\n                                : \" text-red-500\"\n                            }`}\n                          >\n                            {ipdPatientDischargeState.doctorUpdate\n                              ? \"Approved\"\n                              : \"Pending\"}\n                          </span>\n                        </div>\n\n                        <div>\n                          Nurse's Approval:{\" \"}\n                          <span\n                            className={`${\n                              ipdPatientDischargeState.nurseUpdate\n                                ? \" text-green-500 \"\n                                : \" text-red-500\"\n                            }`}\n                          >\n                            {ipdPatientDischargeState.nurseUpdate\n                              ? \"Approved\"\n                              : \"Pending\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ) : ipdPatientDischargeState.dischargeDoctorRequestSent &&\n                    ipdPatientDischargeState.doctorUpdate &&\n                    ipdPatientDischargeState.nurseUpdate ? (\n                    <div className=\" flex flex-col justify-start items-start gap-2\">\n                      <button\n                        onClick={handleFinalIpdDischarge}\n                        className=\" bg-blue-500 text-white px-2 py-1 rounded-md\"\n                      >\n                        Final Discharge\n                      </button>\n                      <div className=\" flex flex-col justify-center items-start text-base \">\n                        <div>\n                          Doctor's Approval:{\" \"}\n                          <span\n                            className={`${\n                              ipdPatientDischargeState.doctorUpdate\n                                ? \" text-green-500 \"\n                                : \" text-red-500\"\n                            }`}\n                          >\n                            {ipdPatientDischargeState.doctorUpdate\n                              ? \"Approved\"\n                              : \"Pending\"}\n                          </span>\n                        </div>\n\n                        <div>\n                          Nurse's Approval:{\" \"}\n                          <span\n                            className={`${\n                              ipdPatientDischargeState.nurseUpdate\n                                ? \" text-green-500 \"\n                                : \" text-red-500\"\n                            }`}\n                          >\n                            {ipdPatientDischargeState.nurseUpdate\n                              ? \"Approved\"\n                              : \"Pending\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <Link\n                      onClick={(e) => handleDischargeButtonClick(e)}\n                      // target=\"_blank\"\n                      // to={ipdPatientData?.data?.mainId}\n                      // to={`${browserLinks.superadmin.category}/${browserLinks.superadmin.internalPages.opdPatients}/${opdPatientData?.data?.mainId}`}\n                      className=\"buttonFilled flex items-center gap-[10px]\"\n                    >\n                      <MdOutlineReceiptLong />\n                      <p>Discharge Request</p>\n                    </Link>\n                  )}\n                </>\n              )}\n              {/* {ipdPatientNegativeBalanceAlert ? (\n                <button\n                  onClick={(e) => e.preventDefault()}\n                  disabled={true}\n                  className=\" bg-red-500 text-white px-2 py-1 rounded-md\"\n                >\n                  Negative Balance\n                </button>\n              ) : ipdPatientDischargeState.discharged === true ? (\n                <div>Download Discharge Reciept</div>\n              ) : (ipdPatientDischargeState.dischargeDoctorRequestSent ===\n                  true &&\n                  ipdPatientDischargeState.doctorUpdate === false) ||\n                ipdPatientDischargeState.nurseUpdate === false ? (\n                <div>Request Pending</div>\n              ) : (\n                <Link\n                  onClick={(e) => handleDischargeButtonClick(e)}\n                  target=\"_blank\"\n                  to={ipdPatientData?.data?.mainId}\n                  // to={`${browserLinks.superadmin.category}/${browserLinks.superadmin.internalPages.opdPatients}/${opdPatientData?.data?.mainId}`}\n                  className=\"buttonFilled flex items-center gap-[10px]\"\n                >\n                  <MdOutlineReceiptLong />\n                  <p>Discharge</p>\n                </Link>\n              )} */}\n            </div>\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {modalViewPatientDetails}\n          </Typography>\n          {/* <Typography></Typography> */}\n        </Box>\n      </Modal>\n      {/* Success Snackbar */}\n      <Snackbars\n        open={openSnackbarSuccess}\n        setOpen={setOpenSnackBarSuccess}\n        severity=\"success\"\n        message={snackBarMessageSuccess}\n      />\n      {/* Warning Snackbar */}\n      <Snackbars\n        open={openSnackbarWarning}\n        setOpen={setOpenSnackBarWarning}\n        severity=\"warning\"\n        message={snackBarMessageWarning}\n      />\n      <DialogBoxToDelete\n        open={openDialogBox}\n        setOpen={setOpenDialogBox}\n        handleAgree={handleAgreeDialogBoxToDelete}\n        message={dialogBoxMessage}\n      />\n    </Suspense>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport PatientBedChargesCal from \"../PatientBedChargesCal/PatientBedChargesCal\";\nimport { useGetIPDPatientBalanceByIdQuery } from \"../../../Store/Services/IPDPatientBalanceService\";\nimport IpdPatientMedDocLabChargesShowcase from \"../IpdPatientMedDocLabChargesShowcase/IpdPatientMedDocLabChargesShowcase\";\n\nfunction IpdChargesShowcase({\n  currentPatientBed,\n  ipdPatientData,\n  setIpdPatientCurrentBalance,\n  setCurrentPatientBedCharges,\n  openViewModal,\n}) {\n  // Extract the mainId from ipdPatientData\n  const IpdPatientMainId = ipdPatientData?.data?.mainId;\n\n  // Call the hook directly in the component body\n  const {\n    data: ipdPatientBalance,\n    error,\n    isLoading,\n    refetch,\n  } = useGetIPDPatientBalanceByIdQuery(IpdPatientMainId);\n\n  console.log(\"balance data:\", ipdPatientBalance);\n\n  // Update the balance state when the balance data changes\n  useEffect(() => {\n    if (ipdPatientBalance && setIpdPatientCurrentBalance) {\n      setIpdPatientCurrentBalance(ipdPatientBalance);\n    }\n  }, [ipdPatientBalance, setIpdPatientCurrentBalance, openViewModal]);\n\n  useEffect(() => {\n    console.log(\"refetch initiated...\");\n    refetch();\n  }, [openViewModal]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error loading IPD Patient Balance</div>;\n  }\n\n  const medicalCharges = ipdPatientBalance?.data?.charges || [];\n  const labTestCharges = ipdPatientBalance?.data?.labTestCharges || [];\n\n  const totalMedicalCharges = ipdPatientBalance?.totalMedicalCharges;\n  const totalLabTestCharges = ipdPatientBalance?.totalLabTestCharges;\n\n  const totalAllCharges = ipdPatientBalance?.total;\n\n  //   console.log(\"medicalCharges:\", medicalCharges);\n\n  return (\n    <div className=\"flex flex-col justify-start items-start w-full gap-10\">\n      <PatientBedChargesCal\n        currentPatientBed={currentPatientBed}\n        ipdPatientData={ipdPatientData}\n        setCurrentPatientBedCharges={setCurrentPatientBedCharges}\n      />\n\n      <IpdPatientMedDocLabChargesShowcase ipdPatientData={ipdPatientData} />\n\n      <div className=\"w-full\">\n        <h3 className=\"text-xl font-semibold\">Extra Charges</h3>\n        <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\n          <thead>\n            <tr className=\"border-b-[1px]\">\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Item\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Quantity\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Price\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Date\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"text-gray-500 font-semibold\">\n            {medicalCharges.map((charge, index) => (\n              <>\n                {charge.items.map((item) => (\n                  <tr key={item._id}>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {item.itemName}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {item.quantity}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      Rs. {item.price}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {new Date(item.date).toLocaleDateString()}\n                    </td>\n                  </tr>\n                ))}\n                {/* <tr key={charge._id}>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {charge.items.map((item) => item.itemName).join(\", \")}\n                  </td>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {charge.price}\n                  </td>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {new Date(charge.createdAt).toLocaleDateString()}\n                  </td>\n                </tr> */}\n              </>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"mt-4 font-bold\">\n          Total Extra Charges: {totalMedicalCharges}\n        </div>\n      </div>\n\n      {/* <div className=\"w-full\">\n        <h3 className=\"text-xl font-semibold\">Lab Test Charges</h3>\n        <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\n          <thead>\n            <tr className=\"border-b-[1px]\">\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Item\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Quantity\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Price\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Date\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"text-gray-500 font-semibold\">\n            {labTestCharges.map((charge, index) => (\n              <>\n                {charge.items.map((item) => (\n                  <tr key={item._id}>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {item.itemName}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {item.quantity}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      Rs. {item.price}\n                    </td>\n                    <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                      {new Date(item.date).toLocaleDateString()}\n                    </td>\n                  </tr>\n                ))}\n                <tr key={charge._id}>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {charge.items.map((item) => item.itemName).join(\", \")}\n                  </td>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {charge.price}\n                  </td>\n                  <td className=\"text-center text-[12px] py-4 px-[4px] border-b-[1px]\">\n                    {new Date(charge.createdAt).toLocaleDateString()}\n                  </td>\n                </tr>\n              </>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"mt-4 font-bold\">\n          Total Lab Test Charges: {totalLabTestCharges}\n        </div>\n      </div> */}\n\n      {/* <div>\n        <h2 className=\"text-2xl font-semibold\">\n          Medical + Lab Charges: Rs. {totalAllCharges}\n        </h2>\n      </div> */}\n    </div>\n  );\n}\n\nexport default IpdChargesShowcase;\n","import { useEffect, useState } from \"react\";\nimport { useIpdPatientMedDocLabChargesGetByIdMutation } from \"../../../Store/Services/IPDPatientService\";\n\nfunction IpdPatientMedDocLabChargesShowcase({ ipdPatientData }) {\n  const [medDocLabChargesGet, responseMedDocLabChargesGet] =\n    useIpdPatientMedDocLabChargesGetByIdMutation();\n\n  const [medDocLabCharges, setMedDocLabCharges] = useState(null);\n\n  useEffect(() => {\n    medDocLabChargesGet(ipdPatientData.data.mainId);\n  }, [medDocLabChargesGet, ipdPatientData.data.mainId]);\n\n  useEffect(() => {\n    if (responseMedDocLabChargesGet.isSuccess) {\n      setMedDocLabCharges(responseMedDocLabChargesGet.data);\n    }\n  }, [responseMedDocLabChargesGet]);\n\n  console.log(\"medDocLabCharges state:\", medDocLabCharges);\n\n  return (\n    <div className=\" w-full\">\n      {responseMedDocLabChargesGet.isSuccess && medDocLabCharges ? (\n        <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\n          <thead className=\"w-full\">\n            <tr className=\" w-full border-b-[1px]\">\n              <th className=\"text-left px-[4px] border-b-[1px] p-[10px]\">\n                Date/ Time\n              </th>\n              <th className=\"text-left px-[4px] border-b-[1px] p-[10px]\">\n                Medicine Cost\n              </th>\n              <th className=\"text-left px-[4px] border-b-[1px] p-[10px]\">\n                Lab Test Cost\n              </th>\n              <th className=\"text-left px-[4px] border-b-[1px] p-[10px]\">\n                Referred Doctor Fees\n              </th>\n              <th className=\"text-left px-[4px] border-b-[1px] p-[10px]\">\n                Doctor Fees\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"text-gray-500 font-semibold\">\n            {medDocLabCharges[0]?.overAllData?.map((charge, index) => (\n              <tr key={charge._id}>\n                <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  {new Date(charge.visitDate).toLocaleString()}\n                </td>\n                <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  Rs. {charge.DailyMedicinePriceTotal}\n                </td>\n                <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  Rs. {charge.DailyTestPriceTotal}\n                </td>\n                <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  {charge.RefereddoctorFeesDatails.length > 0\n                    ? `Rs. ${charge.RefereddoctorFeesDatails[0]}`\n                    : \"N/A\"}\n                </td>\n                <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[1px]\">\n                  {charge.RefereddoctorFeesDatails.length === 0\n                    ? `Rs. ${charge.doctorFeesDatails[0]}`\n                    : \"N/A\"}\n                </td>\n              </tr>\n            ))}\n            <tr>\n              <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[3px] border-t-[3px] text-base\">\n                Total\n              </td>\n              <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[3px] border-t-[3px] text-base\">\n                Rs. {medDocLabCharges[0]?.overallTotalMedicinePrice}\n              </td>\n              <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[3px] border-t-[3px] text-base\">\n                Rs. {medDocLabCharges[0]?.overallTotalTestPrice}\n              </td>\n              <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[3px] border-t-[3px] text-base\">\n                -\n              </td>\n              <td className=\"text-left text-[12px] py-4 px-[4px] border-b-[3px] border-t-[3px] text-base\">\n                Rs. {medDocLabCharges[0]?.overallDoctorVisitCharge}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      ) : responseMedDocLabChargesGet.isError ? (\n        <p>Data Not Found</p>\n      ) : (\n        <p>Loading..</p>\n      )}\n    </div>\n  );\n}\n\nexport default IpdPatientMedDocLabChargesShowcase;\n","import { useEffect, useState } from \"react\";\nimport {\n  useIpdPatientFinalBalanceCalGetByIdMutation,\n  useIpdPatientFinalDischargeByIdMutation,\n} from \"../../../Store/Services/IPDPatientService\";\n\nfunction PatientBedChargesCal({\n  currentPatientBed,\n  ipdPatientData,\n  setCurrentPatientBedCharges,\n}) {\n  //   console.log(\"currentPatientBed in billsumm:\", currentPatientBed);\n  //   console.log(\"ipdPatientData in bill sum:\", ipdPatientData);\n\n  const [\n    ipdPatientFinalBalanceCalGetById,\n    responseIpdPatientFinalBalanceCalGetById,\n  ] = useIpdPatientFinalBalanceCalGetByIdMutation();\n\n  const [ipdPatientFinalBedCal, setIpdPatientFinalBedCal] = useState(null);\n\n  useEffect(() => {\n    ipdPatientFinalBalanceCalGetById(ipdPatientData?.data?.mainId);\n  }, [ipdPatientData?.data?.mainId]);\n\n  useEffect(() => {\n    console.log(\n      \"responseIpdPatientFinalBalanceCalGetById\",\n      responseIpdPatientFinalBalanceCalGetById\n    );\n\n    const finalBedCal =\n      responseIpdPatientFinalBalanceCalGetById?.data?.autoCharges[0];\n    setIpdPatientFinalBedCal(finalBedCal);\n  }, [responseIpdPatientFinalBalanceCalGetById.isSuccess]);\n\n  console.log(\"ipdPatientFinalBedCal:\", ipdPatientFinalBedCal);\n\n  // const [patientInDays, setPatientInDays] = useState(null);\n\n  // const [totalAmount, setTotalAmount] = useState(0);\n\n  const [totalCharges, setTotalCharges] = useState(null);\n\n  // const calculatePatientDays = () => {\n  //   const admittedDate = new Date(ipdPatientData?.data?.createdAt);\n  //   const currentDate = new Date();\n\n  //   admittedDate.setHours(0, 0, 0, 0);\n  //   currentDate.setHours(0, 0, 0, 0);\n\n  //   const timeDifference = currentDate - admittedDate;\n\n  //   const daysDifference = timeDifference / (1000 * 60 * 60 * 24);\n\n  //   setPatientInDays(Math.ceil(daysDifference) + 1);\n  // };\n\n  useEffect(() => {\n    calculateTotalCharges();\n  }, [ipdPatientFinalBedCal]);\n\n  const calculateTotalCharges = () => {\n    if (ipdPatientFinalBedCal) {\n      const totalCharges =\n        ipdPatientFinalBedCal?.bedTotalCharges +\n        ipdPatientFinalBedCal?.nursingTotalCharges +\n        ipdPatientFinalBedCal?.EMOTotalCharges +\n        ipdPatientFinalBedCal?.bioWasteTotalCharges +\n        ipdPatientFinalBedCal?.sanitizationTotalCharges;\n\n      setTotalCharges(Number(totalCharges));\n      if (setCurrentPatientBedCharges) {\n        setCurrentPatientBedCharges(totalCharges);\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   calculatePatientDays();\n  //   calculateTotalCharges();\n  // }, [currentPatientBed, ipdPatientData.patientData]);\n\n  // useEffect(() => {\n  //   calculatePatientDays();\n  //   calculateTotalCharges();\n  // });\n  return (\n    <div className=\" flex flex-col justify-start items-start w-full gap-10\">\n      <h2 className=\" text-2xl font-semibold\">Bill Summary</h2>\n      <div className=\" w-full\">\n        <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\n          <thead>\n            <tr className=\"border-b-[1px]\">\n              {/* <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                S.No.\n              </th> */}\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Bed Charges\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Nursing Charges\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                EMO Charges\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Bio-Waste Charges\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                Sanitization Charges\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px]\">\n                No. Of Days\n              </th>\n              <th className=\"text-center px-[4px] border-b-[1px] p-[10px] text-blue-500\">\n                Total Charges\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\" text-gray-500 font-semibold\">\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              Rs.&nbsp;{ipdPatientFinalBedCal?.bedTotalCharges}\n            </td>\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              Rs.&nbsp;{ipdPatientFinalBedCal?.nursingTotalCharges}\n            </td>\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              Rs.&nbsp;{ipdPatientFinalBedCal?.EMOTotalCharges}\n            </td>\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              Rs.&nbsp;{ipdPatientFinalBedCal?.bioWasteTotalCharges}\n            </td>\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              Rs.&nbsp;{ipdPatientFinalBedCal?.sanitizationTotalCharges}\n            </td>\n            <td className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\">\n              {ipdPatientFinalBedCal?.days}\n            </td>\n            <td className=\"justify-center text-[16px] py-4 px-[4px] text-center border-b-[1px] text-blue-500 font-bold\">\n              Rs.&nbsp;{totalCharges}\n            </td>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default PatientBedChargesCal;\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  console.log(data, config, \"fgfgf\");\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column?.label}>{column?.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className=\"text-center px-[4px] border-b-[1px] p-[10px]\"\r\n        key={column.label}\r\n      >\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      // console.log(row, \"row\");\r\n      const renderedCells = config?.map((column, index) => {\r\n        // console.log(column, \"column\");\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className=\"justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]\"\r\n          >\r\n            {column?.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className=\"\" key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"w-full table-auto border-spacing-2 text-[#595959] font-[300]\">\r\n        <thead>\r\n          <tr className=\"border-b-[1px]\">{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"names":["Transition","React","props","ref","_jsx","Slide","direction","DialogBoxToDelete","_ref","open","handleAgree","setOpen","message","handleClose","children","_jsxs","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","bed","onSelectBed","isSelected","e","preventDefault","bedAvailableOrNot","handleClick","className","concat","disabled","FaBed","bedNumber","beds","handleBedSelect","selectedBed","setSelectedBed","useState","selectedFloor","setSelectedFloor","handleSelectBed","bedTypes","Set","map","bedType","bedSubTypes","bedSubType","floors","bedFloor","bedTypeGroups","type","subTypes","filter","subType","some","filteredBeds","floor","group","BedComponent","bedId","handleAddMedicalCharges","mainId","items","setItems","itemName","quantity","price","date","formError","setFormError","handleInputChange","index","field","value","updatedItems","item","i","Number","onSubmit","async","data","console","log","required","onChange","target","min","step","_","handleDeleteRow","handleAddRow","lastItem","length","reduce","sum","toFixed","IPD_PatientTable","_ipdPatientData$data","_ipdPatientData$data2","_ipdPatientData$data3","_ipdPatientData$data4","_ipdPatientData$data5","_ipdPatientData$data12","_ipdPatientData$data13","_ipdPatientData$data15","_ipdPatientData$balan","_ipdPatientData$balan2","_ipdPatientData$balan3","_ipdPatientData$balan4","_ipdPatientData$balan5","_ipdPatientData$balan6","_ipdPatientData$patie","_ipdPatientData$patie2","_ipdPatientData$data16","_ipdPatientData$data17","_ipdPatientData$patie3","_ipdPatientData$docto","_ipdPatientData$patie4","_ipdPatientData$docto2","_ipdPatientData$patie5","_ipdPatientData$patie6","_ipdPatientData$patie7","_ipdPatientData$patie8","_ipdPatientData$data18","_ipdPatientData$patie9","_ipdPatientData$data19","_ipdPatientData$data20","_ipdPatientData$data21","_ipdPatientData$data22","_ipdPatientData$data23","_ipdPatientData$data24","_browserLinks$nurse","_browserLinks$nurse$i","_ipdPatientData$data25","_ipdPatientData$data26","dispatch","useDispatch","navigate","useNavigate","nurses","useSelector","state","NurseState","doctors","DoctorState","patients","PatientState","ipdPatients","IPDPatientState","createIPDPatient","responseCreateIPDPatient","useCreateIPDPatientMutation","updateIPDPatientById","responseUpdateIPDPatientById","useUpdateIPDPatientByIdMutation","deleteIPDPatientById","responseDeleteIPDPatientById","useDeleteIPDPatientByIdMutation","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","handleClickSnackbarSuccess","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","handleClickSnackbarWarning","openDialogBox","setOpenDialogBox","dialogBoxMessage","setDialogMessage","handleAgreeDialogBoxToDelete","_responseDeleteIPDPat","isSuccess","deleteIpdPatientChange","Math","random","setMainId","isError","ipdPatientId","setIpdPatientId","label","ipdDoctorId","setIpdDoctorId","ipdNurseId","setIpdNurseId","openViewModal","setOpenViewModal","ipdDepositAmount","setIpdDespositAmount","ipdPaymentMode","setIpdPaymentMode","ipdWardNo","setIpdWardNo","ipdFloorNo","setIpdFloorNo","ipdRoomNo","setIpdRoomNo","ipdBedNo","setIpdBedNo","ipdPatientNotes","setIpdPatientNotes","submitButton","setSubmitButton","ipdPatientData","setIpdPatientData","addBedFormOpen","setAddBedFormOpen","updatedBed","setUpdatedBed","previousBed","setPreviousBed","currentPatientBed","setCurrentPatientBed","currentPatientBedCharges","setCurrentPatientBedCharges","updateBedAvailability","responseUpdateBedAvailability","useUpdateBedAvailabilityMutation","BedState","openAddBalanceModal","setOpenAddBalanceModal","ipdAddBalanceData","setIpdAddBalanceData","ipdPatientMainId","ipdAddBalanceNote","setIpdAddBalanceNote","addIpdPatientBalance","responeAddIpdPatientBalance","useAddIPDPatientBalanceByIdMutation","updateIpdBalanceState","newState","prevState","addMedicalCharges","responseAddMedicalCharges","useUpdateIPDPatientMedicalChargesByIdMutation","_responseAddMedicalCh","updateIpdPatientMedicalChargesChange","handleCloseUpdateModal","_responseAddMedicalCh2","error","addLabCharges","responseAddLabCharges","useUpdateIPDPatientLabTestChargesByIdMutation","_responseAddLabCharge","updateIpdPatientLabTestChargesChange","_responseAddLabCharge2","ipdPatientCurrentBalance","setIpdPatientCurrentBalance","ipdPatientNegativeBalanceAlert","setIpdPatientNegativeBalanceAlert","ipdPatientDischargeState","setIpdPatientDischargeState","dischargeNurseRequestSent","ipdPatientNurseRequestForDischarge","dischargeDoctorRequestSent","ipdPatientDoctorRequestForDischarge","nurseUpdate","ipdPatientNurseConfirmation","doctorUpdate","ipdPatientDoctorConfirmation","discharged","ipdPatientDischarged","ipdPatientDischargeReq","responseIpdPatientDischargeReq","useIpdPatientDischargeRequestMutation","_responseIpdPatientDi","createIpdPatientChange","updateIpdPatientDischargeState","_responseIpdPatientDi2","updatedState","_ipdPatientData$data6","_ipdPatientData$data7","_ipdPatientData$data8","_ipdPatientData$data9","_ipdPatientData$data10","ipdPatientDischargeLoader","setIpdPatientDischargeLoader","ipdPatientDischargeLoaderToggle","setTimeout","ipdPatientFinalDischargeReq","responseIpdPatientFinalDischargeReq","useIpdPatientFinalDischargeByIdMutation","_responseIpdPatientFi","_responseIpdPatientFi2","ipdPatientDeposits","setIpdPatientDeposits","selectedPayment","setSelectedPayment","depositErrorMessage","setDepositErrorMessage","responseGetIpdPatientDeposits","useGetIPDPatientBalanceByIdQuery","_responseGetIpdDeposi","_responseGetIpdDeposi2","responseGetIpdDepositsRefetch","refetch","balance","handleIpdDepositsRefetch","renderedPaymentsForDropdown","payment","createdAt","Date","toLocaleString","addedBalance","dateTime","toLocaleDateString","time","toLocaleTimeString","style","position","top","left","transform","width","height","bgcolor","borderRadius","border","outline","boxShadow","p","renderedPatientIDForDropdown","patientId","patientName","renderedDoctorIDForDropdown","doctorId","doctorName","renderedNursesIDForDropdown","nurseId","nurseName","_responseCreateIPDPat","_responseCreateIPDPat2","_responseCreateIPDPat3","browserLinks","nurse","category","internalPages","ipdPatientList","split","join","_responseCreateIPDPat4","modalAddIPDPatient","submitData","balanceNote","bedAvailabilityData","Select","options","placeholder","replace","rows","handleAddBedFormOpen","BedSelector","openUpdateModal","setOpenUpdateModal","_responseUpdateIPDPat","updateIpdPatientChange","_responseUpdateIPDPat2","handleIpdPatientBedUpdate","previousBedAvailData","updatedBedAvailabilityData","modalUpdateIPDPatient","defaultValue","ipdPtientEdit","AddOtherCharges","updateData","handleOpenViewModal","_data$balanceData","balanceData","remainingBalance","find","_ipdPatientData$data14","modalViewPatientDetails","totalAddedBalance","finalTotal","src","patientData","patientImage","process","alt","doctorData","patientBloodGroup","doctorPhone","patientGender","patientDateOfBirth","patientPhone","patientHeight","ipdBillStatus","patientWeight","ipdPatientBed","updatedAt","IpdChargesShowcase","search","setSearch","ipdPatientsFinalBalance","setIpdPatientsFinalBalance","_response$request","response","axios","get","request","status","balanceCalculation","handleIpdPatientsFinalBalanceCall","filteredArray","_data$mainId","userSearch","toLowerCase","searchInData","startsWith","mappedBillData","filteredPatientData","patient","filteredDoctorData","doctor","filteredFinalBalance","ipdPatientRegId","handleAddBalanceModalClose","_responeAddIpdPatient","_responeAddIpdPatient2","config","render","list","_list$data","_list$patientData","_list$doctorData","_list$data2","_beds$find","_list$data3","_list$data4","_list$data5","_Fragment","currentIpdPatientMainId","handleAddBalanceModalOpen","_list$balanceData","_list$balanceData2","_list$balanceData3","_list$balanceData4","_list$balanceData5","MdViewKanban","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","_data$data8","_data$data9","_data$data10","_data$data11","_data$data12","_data$data13","_data$data14","currentBedId","currentBedData","handleOpenUpdateModal","RiEdit2Fill","Suspense","fallback","handleOpen","FaSearch","Table","keyFn","Modal","Box","sx","Typography","variant","component","mt","ipdAddedAmount","handleAddBalanceFormSubmit","handleCloseViewModal","option","Link","to","ipdPatientPaymentReceipt","LuHardDriveDownload","handleFinalIpdDischarge","_ipdPatientData$data11","handleDischargeButtonClick","MdOutlineReceiptLong","Snackbars","severity","_ipdPatientBalance$da","_ipdPatientBalance$da2","IpdPatientMainId","ipdPatientBalance","isLoading","useEffect","medicalCharges","charges","totalMedicalCharges","labTestCharges","totalLabTestCharges","total","PatientBedChargesCal","IpdPatientMedDocLabChargesShowcase","charge","_id","_medDocLabCharges$","_medDocLabCharges$$ov","_medDocLabCharges$2","_medDocLabCharges$3","_medDocLabCharges$4","medDocLabChargesGet","responseMedDocLabChargesGet","useIpdPatientMedDocLabChargesGetByIdMutation","medDocLabCharges","setMedDocLabCharges","overAllData","visitDate","DailyMedicinePriceTotal","DailyTestPriceTotal","RefereddoctorFeesDatails","doctorFeesDatails","overallTotalMedicinePrice","overallTotalTestPrice","overallDoctorVisitCharge","ipdPatientFinalBalanceCalGetById","responseIpdPatientFinalBalanceCalGetById","useIpdPatientFinalBalanceCalGetByIdMutation","ipdPatientFinalBedCal","setIpdPatientFinalBedCal","finalBedCal","autoCharges","totalCharges","setTotalCharges","calculateTotalCharges","bedTotalCharges","nursingTotalCharges","EMOTotalCharges","bioWasteTotalCharges","sanitizationTotalCharges","days","_data$slice","page","setPage","rowsPerPage","setRowsPerPage","renderedHeaders","column","header","Fragment","renderedRows","slice","row","renderedCells","PaginationComponent","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt"],"sourceRoot":""}